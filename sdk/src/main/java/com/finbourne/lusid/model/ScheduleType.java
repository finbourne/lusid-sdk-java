/*
 * LUSID API
 *
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.finbourne.lusid.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets ScheduleType
 */
@JsonAdapter(ScheduleType.Adapter.class)
public enum ScheduleType {
  
  FIXEDSCHEDULE("FixedSchedule"),
  
  FLOATSCHEDULE("FloatSchedule"),
  
  OPTIONALITYSCHEDULE("OptionalitySchedule"),
  
  STEPSCHEDULE("StepSchedule"),
  
  EXERCISE("Exercise"),
  
  FXRATESCHEDULE("FxRateSchedule"),
  
  INVALID("Invalid");

  private String value;

  ScheduleType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ScheduleType fromValue(String value) {
    for (ScheduleType b : ScheduleType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ScheduleType> {
    @Override
    public void write(final JsonWriter jsonWriter, final ScheduleType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ScheduleType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ScheduleType.fromValue(value);
    }
  }
}

