/*
 * LUSID API
 *
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.finbourne.lusid.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Comparison types for date time data
 */
@JsonAdapter(DateTimeComparisonType.Adapter.class)
public enum DateTimeComparisonType {
  
  EXACT("Exact"),
  
  ABSOLUTEDIFFERENCE("AbsoluteDifference");

  private String value;

  DateTimeComparisonType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static DateTimeComparisonType fromValue(String value) {
    for (DateTimeComparisonType b : DateTimeComparisonType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<DateTimeComparisonType> {
    @Override
    public void write(final JsonWriter jsonWriter, final DateTimeComparisonType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public DateTimeComparisonType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return DateTimeComparisonType.fromValue(value);
    }
  }
}

