/*
 * LUSID API
 *
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.finbourne.lusid.model;

import java.util.Objects;
import com.finbourne.lusid.model.ResourceId;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.finbourne.lusid.JSON;

/**
 * A request to create or update a Order.
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CancelOrdersAndMoveRemainingRequest {
  public static final String SERIALIZED_NAME_CANCEL_ORDER_ID = "cancelOrderId";
  @SerializedName(SERIALIZED_NAME_CANCEL_ORDER_ID)
  private ResourceId cancelOrderId;

  public static final String SERIALIZED_NAME_MOVE_REMAINING_TO_ORDER_ID = "moveRemainingToOrderId";
  @SerializedName(SERIALIZED_NAME_MOVE_REMAINING_TO_ORDER_ID)
  private ResourceId moveRemainingToOrderId;

  public static final String SERIALIZED_NAME_MOVE_REMAINING_TO_BLOCK_ID = "moveRemainingToBlockId";
  @SerializedName(SERIALIZED_NAME_MOVE_REMAINING_TO_BLOCK_ID)
  private ResourceId moveRemainingToBlockId;

  public CancelOrdersAndMoveRemainingRequest() {
  }

  public CancelOrdersAndMoveRemainingRequest cancelOrderId(ResourceId cancelOrderId) {
    
    this.cancelOrderId = cancelOrderId;
    return this;
  }

   /**
   * Get cancelOrderId
   * @return cancelOrderId
  **/
  @jakarta.annotation.Nonnull
  public ResourceId getCancelOrderId() {
    return cancelOrderId;
  }


  public void setCancelOrderId(ResourceId cancelOrderId) {
    this.cancelOrderId = cancelOrderId;
  }


  public CancelOrdersAndMoveRemainingRequest moveRemainingToOrderId(ResourceId moveRemainingToOrderId) {
    
    this.moveRemainingToOrderId = moveRemainingToOrderId;
    return this;
  }

   /**
   * Get moveRemainingToOrderId
   * @return moveRemainingToOrderId
  **/
  @jakarta.annotation.Nonnull
  public ResourceId getMoveRemainingToOrderId() {
    return moveRemainingToOrderId;
  }


  public void setMoveRemainingToOrderId(ResourceId moveRemainingToOrderId) {
    this.moveRemainingToOrderId = moveRemainingToOrderId;
  }


  public CancelOrdersAndMoveRemainingRequest moveRemainingToBlockId(ResourceId moveRemainingToBlockId) {
    
    this.moveRemainingToBlockId = moveRemainingToBlockId;
    return this;
  }

   /**
   * Get moveRemainingToBlockId
   * @return moveRemainingToBlockId
  **/
  @jakarta.annotation.Nonnull
  public ResourceId getMoveRemainingToBlockId() {
    return moveRemainingToBlockId;
  }


  public void setMoveRemainingToBlockId(ResourceId moveRemainingToBlockId) {
    this.moveRemainingToBlockId = moveRemainingToBlockId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CancelOrdersAndMoveRemainingRequest cancelOrdersAndMoveRemainingRequest = (CancelOrdersAndMoveRemainingRequest) o;
    return Objects.equals(this.cancelOrderId, cancelOrdersAndMoveRemainingRequest.cancelOrderId) &&
        Objects.equals(this.moveRemainingToOrderId, cancelOrdersAndMoveRemainingRequest.moveRemainingToOrderId) &&
        Objects.equals(this.moveRemainingToBlockId, cancelOrdersAndMoveRemainingRequest.moveRemainingToBlockId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cancelOrderId, moveRemainingToOrderId, moveRemainingToBlockId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CancelOrdersAndMoveRemainingRequest {\n");
    sb.append("    cancelOrderId: ").append(toIndentedString(cancelOrderId)).append("\n");
    sb.append("    moveRemainingToOrderId: ").append(toIndentedString(moveRemainingToOrderId)).append("\n");
    sb.append("    moveRemainingToBlockId: ").append(toIndentedString(moveRemainingToBlockId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cancelOrderId");
    openapiFields.add("moveRemainingToOrderId");
    openapiFields.add("moveRemainingToBlockId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("cancelOrderId");
    openapiRequiredFields.add("moveRemainingToOrderId");
    openapiRequiredFields.add("moveRemainingToBlockId");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CancelOrdersAndMoveRemainingRequest
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CancelOrdersAndMoveRemainingRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CancelOrdersAndMoveRemainingRequest is not found in the empty JSON string", CancelOrdersAndMoveRemainingRequest.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CancelOrdersAndMoveRemainingRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `cancelOrderId`
      ResourceId.validateJsonElement(jsonObj.get("cancelOrderId"));
      // validate the required field `moveRemainingToOrderId`
      ResourceId.validateJsonElement(jsonObj.get("moveRemainingToOrderId"));
      // validate the required field `moveRemainingToBlockId`
      ResourceId.validateJsonElement(jsonObj.get("moveRemainingToBlockId"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CancelOrdersAndMoveRemainingRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CancelOrdersAndMoveRemainingRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CancelOrdersAndMoveRemainingRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CancelOrdersAndMoveRemainingRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CancelOrdersAndMoveRemainingRequest>() {
           @Override
           public void write(JsonWriter out, CancelOrdersAndMoveRemainingRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CancelOrdersAndMoveRemainingRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CancelOrdersAndMoveRemainingRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CancelOrdersAndMoveRemainingRequest
  * @throws IOException if the JSON string is invalid with respect to CancelOrdersAndMoveRemainingRequest
  */
  public static CancelOrdersAndMoveRemainingRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CancelOrdersAndMoveRemainingRequest.class);
  }

 /**
  * Convert an instance of CancelOrdersAndMoveRemainingRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}
