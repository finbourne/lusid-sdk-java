/*
 * LUSID API
 *
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.finbourne.lusid.model;

import java.util.Objects;
import com.finbourne.lusid.model.ResourceId;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.finbourne.lusid.JSON;

/**
 * ComplianceRunInfoV2
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ComplianceRunInfoV2 {
  public static final String SERIALIZED_NAME_RUN_ID = "runId";
  @SerializedName(SERIALIZED_NAME_RUN_ID)
  private ResourceId runId;

  public static final String SERIALIZED_NAME_INSTIGATED_AT = "instigatedAt";
  @SerializedName(SERIALIZED_NAME_INSTIGATED_AT)
  private OffsetDateTime instigatedAt;

  public static final String SERIALIZED_NAME_COMPLETED_AT = "completedAt";
  @SerializedName(SERIALIZED_NAME_COMPLETED_AT)
  private OffsetDateTime completedAt;

  public static final String SERIALIZED_NAME_SCHEDULE = "schedule";
  @SerializedName(SERIALIZED_NAME_SCHEDULE)
  private String schedule;

  public static final String SERIALIZED_NAME_INSTIGATED_BY = "instigatedBy";
  @SerializedName(SERIALIZED_NAME_INSTIGATED_BY)
  private String instigatedBy;

  public ComplianceRunInfoV2() {
  }

  public ComplianceRunInfoV2 runId(ResourceId runId) {
    
    this.runId = runId;
    return this;
  }

   /**
   * Get runId
   * @return runId
  **/
  @jakarta.annotation.Nonnull
  public ResourceId getRunId() {
    return runId;
  }


  public void setRunId(ResourceId runId) {
    this.runId = runId;
  }


  public ComplianceRunInfoV2 instigatedAt(OffsetDateTime instigatedAt) {
    
    this.instigatedAt = instigatedAt;
    return this;
  }

   /**
   * Get instigatedAt
   * @return instigatedAt
  **/
  @jakarta.annotation.Nonnull
  public OffsetDateTime getInstigatedAt() {
    return instigatedAt;
  }


  public void setInstigatedAt(OffsetDateTime instigatedAt) {
    this.instigatedAt = instigatedAt;
  }


  public ComplianceRunInfoV2 completedAt(OffsetDateTime completedAt) {
    
    this.completedAt = completedAt;
    return this;
  }

   /**
   * Get completedAt
   * @return completedAt
  **/
  @jakarta.annotation.Nonnull
  public OffsetDateTime getCompletedAt() {
    return completedAt;
  }


  public void setCompletedAt(OffsetDateTime completedAt) {
    this.completedAt = completedAt;
  }


  public ComplianceRunInfoV2 schedule(String schedule) {
    
    this.schedule = schedule;
    return this;
  }

   /**
   * Get schedule
   * @return schedule
  **/
  @jakarta.annotation.Nonnull
  public String getSchedule() {
    return schedule;
  }


  public void setSchedule(String schedule) {
    this.schedule = schedule;
  }


  public ComplianceRunInfoV2 instigatedBy(String instigatedBy) {
    
    this.instigatedBy = instigatedBy;
    return this;
  }

   /**
   * Get instigatedBy
   * @return instigatedBy
  **/
  @jakarta.annotation.Nonnull
  public String getInstigatedBy() {
    return instigatedBy;
  }


  public void setInstigatedBy(String instigatedBy) {
    this.instigatedBy = instigatedBy;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComplianceRunInfoV2 complianceRunInfoV2 = (ComplianceRunInfoV2) o;
    return Objects.equals(this.runId, complianceRunInfoV2.runId) &&
        Objects.equals(this.instigatedAt, complianceRunInfoV2.instigatedAt) &&
        Objects.equals(this.completedAt, complianceRunInfoV2.completedAt) &&
        Objects.equals(this.schedule, complianceRunInfoV2.schedule) &&
        Objects.equals(this.instigatedBy, complianceRunInfoV2.instigatedBy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(runId, instigatedAt, completedAt, schedule, instigatedBy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComplianceRunInfoV2 {\n");
    sb.append("    runId: ").append(toIndentedString(runId)).append("\n");
    sb.append("    instigatedAt: ").append(toIndentedString(instigatedAt)).append("\n");
    sb.append("    completedAt: ").append(toIndentedString(completedAt)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    instigatedBy: ").append(toIndentedString(instigatedBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("runId");
    openapiFields.add("instigatedAt");
    openapiFields.add("completedAt");
    openapiFields.add("schedule");
    openapiFields.add("instigatedBy");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("runId");
    openapiRequiredFields.add("instigatedAt");
    openapiRequiredFields.add("completedAt");
    openapiRequiredFields.add("schedule");
    openapiRequiredFields.add("instigatedBy");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ComplianceRunInfoV2
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ComplianceRunInfoV2.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ComplianceRunInfoV2 is not found in the empty JSON string", ComplianceRunInfoV2.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ComplianceRunInfoV2.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `runId`
      ResourceId.validateJsonElement(jsonObj.get("runId"));
      if (!jsonObj.get("schedule").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `schedule` to be a primitive type in the JSON string but got `%s`", jsonObj.get("schedule").toString()));
      }
      if (!jsonObj.get("instigatedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `instigatedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("instigatedBy").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ComplianceRunInfoV2.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ComplianceRunInfoV2' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ComplianceRunInfoV2> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ComplianceRunInfoV2.class));

       return (TypeAdapter<T>) new TypeAdapter<ComplianceRunInfoV2>() {
           @Override
           public void write(JsonWriter out, ComplianceRunInfoV2 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ComplianceRunInfoV2 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ComplianceRunInfoV2 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ComplianceRunInfoV2
  * @throws IOException if the JSON string is invalid with respect to ComplianceRunInfoV2
  */
  public static ComplianceRunInfoV2 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ComplianceRunInfoV2.class);
  }

 /**
  * Convert an instance of ComplianceRunInfoV2 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}
