/*
 * LUSID API
 *
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.finbourne.lusid.model;

import java.util.Objects;
import com.finbourne.lusid.model.CustomDataModelCriteria;
import com.finbourne.lusid.model.DataModelSummary;
import com.finbourne.lusid.model.Version;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.finbourne.lusid.JSON;

/**
 * CustomDataModel
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CustomDataModel {
  public static final String SERIALIZED_NAME_DATA_MODEL_SUMMARY = "dataModelSummary";
  @SerializedName(SERIALIZED_NAME_DATA_MODEL_SUMMARY)
  private DataModelSummary dataModelSummary;

  public static final String SERIALIZED_NAME_INHERITED = "inherited";
  @SerializedName(SERIALIZED_NAME_INHERITED)
  private CustomDataModelCriteria inherited;

  public static final String SERIALIZED_NAME_INCREMENTAL = "incremental";
  @SerializedName(SERIALIZED_NAME_INCREMENTAL)
  private CustomDataModelCriteria incremental;

  public static final String SERIALIZED_NAME_APPLIED = "applied";
  @SerializedName(SERIALIZED_NAME_APPLIED)
  private CustomDataModelCriteria applied;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Version version;

  public CustomDataModel() {
  }

  public CustomDataModel dataModelSummary(DataModelSummary dataModelSummary) {
    
    this.dataModelSummary = dataModelSummary;
    return this;
  }

   /**
   * Get dataModelSummary
   * @return dataModelSummary
  **/
  @jakarta.annotation.Nullable
  public DataModelSummary getDataModelSummary() {
    return dataModelSummary;
  }


  public void setDataModelSummary(DataModelSummary dataModelSummary) {
    this.dataModelSummary = dataModelSummary;
  }


  public CustomDataModel inherited(CustomDataModelCriteria inherited) {
    
    this.inherited = inherited;
    return this;
  }

   /**
   * Get inherited
   * @return inherited
  **/
  @jakarta.annotation.Nullable
  public CustomDataModelCriteria getInherited() {
    return inherited;
  }


  public void setInherited(CustomDataModelCriteria inherited) {
    this.inherited = inherited;
  }


  public CustomDataModel incremental(CustomDataModelCriteria incremental) {
    
    this.incremental = incremental;
    return this;
  }

   /**
   * Get incremental
   * @return incremental
  **/
  @jakarta.annotation.Nullable
  public CustomDataModelCriteria getIncremental() {
    return incremental;
  }


  public void setIncremental(CustomDataModelCriteria incremental) {
    this.incremental = incremental;
  }


  public CustomDataModel applied(CustomDataModelCriteria applied) {
    
    this.applied = applied;
    return this;
  }

   /**
   * Get applied
   * @return applied
  **/
  @jakarta.annotation.Nullable
  public CustomDataModelCriteria getApplied() {
    return applied;
  }


  public void setApplied(CustomDataModelCriteria applied) {
    this.applied = applied;
  }


  public CustomDataModel version(Version version) {
    
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @jakarta.annotation.Nullable
  public Version getVersion() {
    return version;
  }


  public void setVersion(Version version) {
    this.version = version;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomDataModel customDataModel = (CustomDataModel) o;
    return Objects.equals(this.dataModelSummary, customDataModel.dataModelSummary) &&
        Objects.equals(this.inherited, customDataModel.inherited) &&
        Objects.equals(this.incremental, customDataModel.incremental) &&
        Objects.equals(this.applied, customDataModel.applied) &&
        Objects.equals(this.version, customDataModel.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataModelSummary, inherited, incremental, applied, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomDataModel {\n");
    sb.append("    dataModelSummary: ").append(toIndentedString(dataModelSummary)).append("\n");
    sb.append("    inherited: ").append(toIndentedString(inherited)).append("\n");
    sb.append("    incremental: ").append(toIndentedString(incremental)).append("\n");
    sb.append("    applied: ").append(toIndentedString(applied)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dataModelSummary");
    openapiFields.add("inherited");
    openapiFields.add("incremental");
    openapiFields.add("applied");
    openapiFields.add("version");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CustomDataModel
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CustomDataModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomDataModel is not found in the empty JSON string", CustomDataModel.openapiRequiredFields.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `dataModelSummary`
      if (jsonObj.get("dataModelSummary") != null && !jsonObj.get("dataModelSummary").isJsonNull()) {
        DataModelSummary.validateJsonElement(jsonObj.get("dataModelSummary"));
      }
      // validate the optional field `inherited`
      if (jsonObj.get("inherited") != null && !jsonObj.get("inherited").isJsonNull()) {
        CustomDataModelCriteria.validateJsonElement(jsonObj.get("inherited"));
      }
      // validate the optional field `incremental`
      if (jsonObj.get("incremental") != null && !jsonObj.get("incremental").isJsonNull()) {
        CustomDataModelCriteria.validateJsonElement(jsonObj.get("incremental"));
      }
      // validate the optional field `applied`
      if (jsonObj.get("applied") != null && !jsonObj.get("applied").isJsonNull()) {
        CustomDataModelCriteria.validateJsonElement(jsonObj.get("applied"));
      }
      // validate the optional field `version`
      if (jsonObj.get("version") != null && !jsonObj.get("version").isJsonNull()) {
        Version.validateJsonElement(jsonObj.get("version"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomDataModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomDataModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomDataModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomDataModel.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomDataModel>() {
           @Override
           public void write(JsonWriter out, CustomDataModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomDataModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomDataModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomDataModel
  * @throws IOException if the JSON string is invalid with respect to CustomDataModel
  */
  public static CustomDataModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomDataModel.class);
  }

 /**
  * Convert an instance of CustomDataModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}
