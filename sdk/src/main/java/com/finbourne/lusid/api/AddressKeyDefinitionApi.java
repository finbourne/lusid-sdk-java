/*
 * LUSID API
 *
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.finbourne.lusid.api;

import com.finbourne.lusid.ApiCallback;
import com.finbourne.lusid.ApiClient;
import com.finbourne.lusid.ApiException;
import com.finbourne.lusid.ApiResponse;
import com.finbourne.lusid.Configuration;
import com.finbourne.lusid.Pair;
import com.finbourne.lusid.ProgressRequestBody;
import com.finbourne.lusid.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.finbourne.lusid.model.AddressKeyDefinition;
import com.finbourne.lusid.model.CreateAddressKeyDefinitionRequest;
import com.finbourne.lusid.model.LusidProblemDetails;
import com.finbourne.lusid.model.LusidValidationProblemDetails;
import java.time.OffsetDateTime;
import com.finbourne.lusid.model.PagedResourceListOfAddressKeyDefinition;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AddressKeyDefinitionApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public AddressKeyDefinitionApi() {
        this(Configuration.getDefaultApiClient());
    }

    public AddressKeyDefinitionApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    private okhttp3.Call createAddressKeyDefinitionCall(CreateAddressKeyDefinitionRequest createAddressKeyDefinitionRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = createAddressKeyDefinitionRequest;

        // create path and map variables
        String localVarPath = "/api/addresskeydefinitions";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain",
            "application/json",
            "text/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json-patch+json",
            "application/json",
            "text/json",
            "application/*+json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createAddressKeyDefinitionValidateBeforeCall(CreateAddressKeyDefinitionRequest createAddressKeyDefinitionRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'createAddressKeyDefinitionRequest' is set
        if (createAddressKeyDefinitionRequest == null) {
            throw new ApiException("Missing the required parameter 'createAddressKeyDefinitionRequest' when calling createAddressKeyDefinition(Async)");
        }

        return createAddressKeyDefinitionCall(createAddressKeyDefinitionRequest, _callback);

    }


    private ApiResponse<AddressKeyDefinition> createAddressKeyDefinitionWithHttpInfo(CreateAddressKeyDefinitionRequest createAddressKeyDefinitionRequest) throws ApiException {
        okhttp3.Call localVarCall = createAddressKeyDefinitionValidateBeforeCall(createAddressKeyDefinitionRequest, null);
        Type localVarReturnType = new TypeToken<AddressKeyDefinition>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call createAddressKeyDefinitionAsync(CreateAddressKeyDefinitionRequest createAddressKeyDefinitionRequest, final ApiCallback<AddressKeyDefinition> _callback) throws ApiException {

        okhttp3.Call localVarCall = createAddressKeyDefinitionValidateBeforeCall(createAddressKeyDefinitionRequest, _callback);
        Type localVarReturnType = new TypeToken<AddressKeyDefinition>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class APIcreateAddressKeyDefinitionRequest {
        private final CreateAddressKeyDefinitionRequest createAddressKeyDefinitionRequest;

        private APIcreateAddressKeyDefinitionRequest(CreateAddressKeyDefinitionRequest createAddressKeyDefinitionRequest) {
            this.createAddressKeyDefinitionRequest = createAddressKeyDefinitionRequest;
        }

        /**
         * Build call for createAddressKeyDefinition
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> The newly created address key definition. </td><td>  -  </td></tr>
            <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return createAddressKeyDefinitionCall(createAddressKeyDefinitionRequest, _callback);
        }

        /**
         * Execute createAddressKeyDefinition request
         * @return AddressKeyDefinition
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> The newly created address key definition. </td><td>  -  </td></tr>
            <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
         </table>
         */
        public AddressKeyDefinition execute() throws ApiException {
            ApiResponse<AddressKeyDefinition> localVarResp = createAddressKeyDefinitionWithHttpInfo(createAddressKeyDefinitionRequest);
            return localVarResp.getData();
        }

        /**
         * Execute createAddressKeyDefinition request with HTTP info returned
         * @return ApiResponse&lt;AddressKeyDefinition&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> The newly created address key definition. </td><td>  -  </td></tr>
            <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<AddressKeyDefinition> executeWithHttpInfo() throws ApiException {
            return createAddressKeyDefinitionWithHttpInfo(createAddressKeyDefinitionRequest);
        }

        /**
         * Execute createAddressKeyDefinition request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> The newly created address key definition. </td><td>  -  </td></tr>
            <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<AddressKeyDefinition> _callback) throws ApiException {
            return createAddressKeyDefinitionAsync(createAddressKeyDefinitionRequest, _callback);
        }
    }

    /**
     * [EARLY ACCESS] CreateAddressKeyDefinition: Create an AddressKeyDefinition.
     * Create the given address key definition.
     * @param createAddressKeyDefinitionRequest The request used to create the address key definition. (required)
     * @return APIcreateAddressKeyDefinitionRequest
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> The newly created address key definition. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public APIcreateAddressKeyDefinitionRequest createAddressKeyDefinition(CreateAddressKeyDefinitionRequest createAddressKeyDefinitionRequest) {
        return new APIcreateAddressKeyDefinitionRequest(createAddressKeyDefinitionRequest);
    }
    private okhttp3.Call getAddressKeyDefinitionCall(String key, OffsetDateTime asAt, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/addresskeydefinitions/{key}"
            .replace("{" + "key" + "}", localVarApiClient.escapeString(key.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (asAt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("asAt", asAt));
        }

        final String[] localVarAccepts = {
            "text/plain",
            "application/json",
            "text/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getAddressKeyDefinitionValidateBeforeCall(String key, OffsetDateTime asAt, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'key' is set
        if (key == null) {
            throw new ApiException("Missing the required parameter 'key' when calling getAddressKeyDefinition(Async)");
        }

        return getAddressKeyDefinitionCall(key, asAt, _callback);

    }


    private ApiResponse<AddressKeyDefinition> getAddressKeyDefinitionWithHttpInfo(String key, OffsetDateTime asAt) throws ApiException {
        okhttp3.Call localVarCall = getAddressKeyDefinitionValidateBeforeCall(key, asAt, null);
        Type localVarReturnType = new TypeToken<AddressKeyDefinition>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call getAddressKeyDefinitionAsync(String key, OffsetDateTime asAt, final ApiCallback<AddressKeyDefinition> _callback) throws ApiException {

        okhttp3.Call localVarCall = getAddressKeyDefinitionValidateBeforeCall(key, asAt, _callback);
        Type localVarReturnType = new TypeToken<AddressKeyDefinition>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class APIgetAddressKeyDefinitionRequest {
        private final String key;
        private OffsetDateTime asAt;

        private APIgetAddressKeyDefinitionRequest(String key) {
            this.key = key;
        }

        /**
         * Set asAt
         * @param asAt The asAt datetime at which to retrieve the address key definition. Defaults to return the latest version of the address key definition if not specified. (optional)
         * @return APIgetAddressKeyDefinitionRequest
         */
        public APIgetAddressKeyDefinitionRequest asAt(OffsetDateTime asAt) {
            this.asAt = asAt;
            return this;
        }

        /**
         * Build call for getAddressKeyDefinition
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> The address key definition with the given address key. </td><td>  -  </td></tr>
            <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return getAddressKeyDefinitionCall(key, asAt, _callback);
        }

        /**
         * Execute getAddressKeyDefinition request
         * @return AddressKeyDefinition
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> The address key definition with the given address key. </td><td>  -  </td></tr>
            <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
         </table>
         */
        public AddressKeyDefinition execute() throws ApiException {
            ApiResponse<AddressKeyDefinition> localVarResp = getAddressKeyDefinitionWithHttpInfo(key, asAt);
            return localVarResp.getData();
        }

        /**
         * Execute getAddressKeyDefinition request with HTTP info returned
         * @return ApiResponse&lt;AddressKeyDefinition&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> The address key definition with the given address key. </td><td>  -  </td></tr>
            <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<AddressKeyDefinition> executeWithHttpInfo() throws ApiException {
            return getAddressKeyDefinitionWithHttpInfo(key, asAt);
        }

        /**
         * Execute getAddressKeyDefinition request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> The address key definition with the given address key. </td><td>  -  </td></tr>
            <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<AddressKeyDefinition> _callback) throws ApiException {
            return getAddressKeyDefinitionAsync(key, asAt, _callback);
        }
    }

    /**
     * [EARLY ACCESS] GetAddressKeyDefinition: Get an AddressKeyDefinition.
     * Get the address key definition with the given address key at the specific asAt time.
     * @param key The address key of the address key definition. (required)
     * @return APIgetAddressKeyDefinitionRequest
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The address key definition with the given address key. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public APIgetAddressKeyDefinitionRequest getAddressKeyDefinition(String key) {
        return new APIgetAddressKeyDefinitionRequest(key);
    }
    private okhttp3.Call listAddressKeyDefinitionsCall(OffsetDateTime asAt, String page, Integer limit, String filter, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/addresskeydefinitions";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (asAt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("asAt", asAt));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter", filter));
        }

        final String[] localVarAccepts = {
            "text/plain",
            "application/json",
            "text/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listAddressKeyDefinitionsValidateBeforeCall(OffsetDateTime asAt, String page, Integer limit, String filter, final ApiCallback _callback) throws ApiException {
        return listAddressKeyDefinitionsCall(asAt, page, limit, filter, _callback);

    }


    private ApiResponse<PagedResourceListOfAddressKeyDefinition> listAddressKeyDefinitionsWithHttpInfo(OffsetDateTime asAt, String page, Integer limit, String filter) throws ApiException {
        okhttp3.Call localVarCall = listAddressKeyDefinitionsValidateBeforeCall(asAt, page, limit, filter, null);
        Type localVarReturnType = new TypeToken<PagedResourceListOfAddressKeyDefinition>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call listAddressKeyDefinitionsAsync(OffsetDateTime asAt, String page, Integer limit, String filter, final ApiCallback<PagedResourceListOfAddressKeyDefinition> _callback) throws ApiException {

        okhttp3.Call localVarCall = listAddressKeyDefinitionsValidateBeforeCall(asAt, page, limit, filter, _callback);
        Type localVarReturnType = new TypeToken<PagedResourceListOfAddressKeyDefinition>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class APIlistAddressKeyDefinitionsRequest {
        private OffsetDateTime asAt;
        private String page;
        private Integer limit;
        private String filter;

        private APIlistAddressKeyDefinitionsRequest() {
        }

        /**
         * Set asAt
         * @param asAt The asAt datetime at which to retrieve the address key definition.   Defaults to return the latest version of the address key definition if not specified. (optional)
         * @return APIlistAddressKeyDefinitionsRequest
         */
        public APIlistAddressKeyDefinitionsRequest asAt(OffsetDateTime asAt) {
            this.asAt = asAt;
            return this;
        }

        /**
         * Set page
         * @param page The pagination token to use to continue listing address key definitions from a previous call to list address key definitions.   This value is returned from the previous call. If a pagination token is provided the sortBy, filter, effectiveAt, and asAt fields   must not have changed since the original request. (optional)
         * @return APIlistAddressKeyDefinitionsRequest
         */
        public APIlistAddressKeyDefinitionsRequest page(String page) {
            this.page = page;
            return this;
        }

        /**
         * Set limit
         * @param limit When paginating, limit the number of returned results to this many. (optional)
         * @return APIlistAddressKeyDefinitionsRequest
         */
        public APIlistAddressKeyDefinitionsRequest limit(Integer limit) {
            this.limit = limit;
            return this;
        }

        /**
         * Set filter
         * @param filter Expression to filter the result set. Read more about filtering results from LUSID here:   https://support.lusid.com/filtering-results-from-lusid. (optional)
         * @return APIlistAddressKeyDefinitionsRequest
         */
        public APIlistAddressKeyDefinitionsRequest filter(String filter) {
            this.filter = filter;
            return this;
        }

        /**
         * Build call for listAddressKeyDefinitions
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> A collection of address key definitions. </td><td>  -  </td></tr>
            <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return listAddressKeyDefinitionsCall(asAt, page, limit, filter, _callback);
        }

        /**
         * Execute listAddressKeyDefinitions request
         * @return PagedResourceListOfAddressKeyDefinition
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> A collection of address key definitions. </td><td>  -  </td></tr>
            <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
         </table>
         */
        public PagedResourceListOfAddressKeyDefinition execute() throws ApiException {
            ApiResponse<PagedResourceListOfAddressKeyDefinition> localVarResp = listAddressKeyDefinitionsWithHttpInfo(asAt, page, limit, filter);
            return localVarResp.getData();
        }

        /**
         * Execute listAddressKeyDefinitions request with HTTP info returned
         * @return ApiResponse&lt;PagedResourceListOfAddressKeyDefinition&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> A collection of address key definitions. </td><td>  -  </td></tr>
            <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<PagedResourceListOfAddressKeyDefinition> executeWithHttpInfo() throws ApiException {
            return listAddressKeyDefinitionsWithHttpInfo(asAt, page, limit, filter);
        }

        /**
         * Execute listAddressKeyDefinitions request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> A collection of address key definitions. </td><td>  -  </td></tr>
            <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<PagedResourceListOfAddressKeyDefinition> _callback) throws ApiException {
            return listAddressKeyDefinitionsAsync(asAt, page, limit, filter, _callback);
        }
    }

    /**
     * [EARLY ACCESS] ListAddressKeyDefinitions: List AddressKeyDefinitions.
     * Fetch the last pre-AsAt date version of each address key definition.
     * @return APIlistAddressKeyDefinitionsRequest
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A collection of address key definitions. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public APIlistAddressKeyDefinitionsRequest listAddressKeyDefinitions() {
        return new APIlistAddressKeyDefinitionsRequest();
    }
}
