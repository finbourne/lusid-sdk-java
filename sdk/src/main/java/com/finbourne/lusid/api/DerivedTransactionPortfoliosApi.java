/*
 * LUSID API
 *
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.finbourne.lusid.api;

import com.finbourne.lusid.ApiCallback;
import com.finbourne.lusid.ApiClient;
import com.finbourne.lusid.ApiException;
import com.finbourne.lusid.ApiResponse;
import com.finbourne.lusid.Configuration;
import com.finbourne.lusid.Pair;
import com.finbourne.lusid.ProgressRequestBody;
import com.finbourne.lusid.ProgressResponseBody;
import com.finbourne.lusid.extensions.ConfigurationOptions;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.finbourne.lusid.model.CreateDerivedTransactionPortfolioRequest;
import com.finbourne.lusid.model.DeletedEntityResponse;
import com.finbourne.lusid.model.LusidProblemDetails;
import com.finbourne.lusid.model.LusidValidationProblemDetails;
import com.finbourne.lusid.model.Portfolio;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DerivedTransactionPortfoliosApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public DerivedTransactionPortfoliosApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DerivedTransactionPortfoliosApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    private okhttp3.Call createDerivedPortfolioCall(String scope, CreateDerivedTransactionPortfolioRequest createDerivedTransactionPortfolioRequest, final ApiCallback _callback) throws ApiException {
        return createDerivedPortfolioCall(scope, createDerivedTransactionPortfolioRequest,  _callback, new ConfigurationOptions());
    }

    private okhttp3.Call createDerivedPortfolioCall(String scope, CreateDerivedTransactionPortfolioRequest createDerivedTransactionPortfolioRequest, final ApiCallback _callback, ConfigurationOptions opts) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = createDerivedTransactionPortfolioRequest;

        // create path and map variables
        String localVarPath = "/api/derivedtransactionportfolios/{scope}"
            .replace("{" + "scope" + "}", localVarApiClient.escapeString(scope.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain",
            "application/json",
            "text/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json-patch+json",
            "application/json",
            "text/json",
            "application/*+json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback, opts);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createDerivedPortfolioValidateBeforeCall(String scope, CreateDerivedTransactionPortfolioRequest createDerivedTransactionPortfolioRequest, final ApiCallback _callback, ConfigurationOptions opts) throws ApiException {
        // verify the required parameter 'scope' is set
        if (scope == null) {
            throw new ApiException("Missing the required parameter 'scope' when calling createDerivedPortfolio(Async)");
        }

        return createDerivedPortfolioCall(scope, createDerivedTransactionPortfolioRequest, _callback, opts);

    }


    private ApiResponse<Portfolio> createDerivedPortfolioWithHttpInfo(String scope, CreateDerivedTransactionPortfolioRequest createDerivedTransactionPortfolioRequest) throws ApiException {
        okhttp3.Call localVarCall = createDerivedPortfolioValidateBeforeCall(scope, createDerivedTransactionPortfolioRequest, null, new ConfigurationOptions());
        Type localVarReturnType = new TypeToken<Portfolio>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private ApiResponse<Portfolio> createDerivedPortfolioWithHttpInfo(String scope, CreateDerivedTransactionPortfolioRequest createDerivedTransactionPortfolioRequest, ConfigurationOptions opts) throws ApiException {
        okhttp3.Call localVarCall = createDerivedPortfolioValidateBeforeCall(scope, createDerivedTransactionPortfolioRequest, null, opts);
        Type localVarReturnType = new TypeToken<Portfolio>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call createDerivedPortfolioAsync(String scope, CreateDerivedTransactionPortfolioRequest createDerivedTransactionPortfolioRequest, final ApiCallback<Portfolio> _callback) throws ApiException {

        okhttp3.Call localVarCall = createDerivedPortfolioValidateBeforeCall(scope, createDerivedTransactionPortfolioRequest, _callback, new ConfigurationOptions());
        Type localVarReturnType = new TypeToken<Portfolio>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    private okhttp3.Call createDerivedPortfolioAsync(String scope, CreateDerivedTransactionPortfolioRequest createDerivedTransactionPortfolioRequest, final ApiCallback<Portfolio> _callback, ConfigurationOptions opts) throws ApiException {

        okhttp3.Call localVarCall = createDerivedPortfolioValidateBeforeCall(scope, createDerivedTransactionPortfolioRequest, _callback, opts);
        Type localVarReturnType = new TypeToken<Portfolio>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class APIcreateDerivedPortfolioRequest {
        private final String scope;
        private CreateDerivedTransactionPortfolioRequest createDerivedTransactionPortfolioRequest;

        private APIcreateDerivedPortfolioRequest(String scope) {
            this.scope = scope;
        }

        /**
         * Set createDerivedTransactionPortfolioRequest
         * @param createDerivedTransactionPortfolioRequest The definition of the derived transaction portfolio. (optional)
         * @return APIcreateDerivedPortfolioRequest
         */
        public APIcreateDerivedPortfolioRequest createDerivedTransactionPortfolioRequest(CreateDerivedTransactionPortfolioRequest createDerivedTransactionPortfolioRequest) {
            this.createDerivedTransactionPortfolioRequest = createDerivedTransactionPortfolioRequest;
            return this;
        }

        /**
         * Build call for createDerivedPortfolio
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> The created derived portfolio, with populated id </td><td>  -  </td></tr>
            <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return createDerivedPortfolioCall(scope, createDerivedTransactionPortfolioRequest, _callback);
        }

        /**
         * Execute createDerivedPortfolio request
         * @return Portfolio
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> The created derived portfolio, with populated id </td><td>  -  </td></tr>
            <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
         </table>
         */
        public Portfolio execute() throws ApiException {
            ApiResponse<Portfolio> localVarResp = createDerivedPortfolioWithHttpInfo(scope, createDerivedTransactionPortfolioRequest);
            return localVarResp.getData();
        }

        /**
         * Execute createDerivedPortfolio request. Use any specified configuration options to override any other configuration for this request only.
         * @return Portfolio
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> The created derived portfolio, with populated id </td><td>  -  </td></tr>
            <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
         </table>
         */
        public Portfolio execute(ConfigurationOptions opts) throws ApiException {
            ApiResponse<Portfolio> localVarResp = createDerivedPortfolioWithHttpInfo(scope, createDerivedTransactionPortfolioRequest, opts);
            return localVarResp.getData();
        }

        /**
         * Execute createDerivedPortfolio request with HTTP info returned
         * @return ApiResponse&lt;Portfolio&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> The created derived portfolio, with populated id </td><td>  -  </td></tr>
            <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<Portfolio> executeWithHttpInfo() throws ApiException {
            return createDerivedPortfolioWithHttpInfo(scope, createDerivedTransactionPortfolioRequest);
        }

        /**
         * Execute createDerivedPortfolio request with HTTP info returned. Use any specified configuration options to override any other configuration for this request only.
         * @return ApiResponse&lt;Portfolio&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> The created derived portfolio, with populated id </td><td>  -  </td></tr>
            <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<Portfolio> executeWithHttpInfo(ConfigurationOptions opts) throws ApiException {
            return createDerivedPortfolioWithHttpInfo(scope, createDerivedTransactionPortfolioRequest, opts);
        }

        /**
         * Execute createDerivedPortfolio request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> The created derived portfolio, with populated id </td><td>  -  </td></tr>
            <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<Portfolio> _callback) throws ApiException {
            return createDerivedPortfolioAsync(scope, createDerivedTransactionPortfolioRequest, _callback);
        }

        /**
         * Execute createDerivedPortfolio request (asynchronously). Use any specified configuration options to override any other configuration for this request only.
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> The created derived portfolio, with populated id </td><td>  -  </td></tr>
            <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<Portfolio> _callback, ConfigurationOptions opts) throws ApiException {
            return createDerivedPortfolioAsync(scope, createDerivedTransactionPortfolioRequest, _callback, opts);
        }
    }

    /**
     * CreateDerivedPortfolio: Create derived portfolio
     * Create a derived transaction portfolio from a parent transaction portfolio (which may itself be derived).
     * @param scope The scope in which to create the derived transaction portfolio. (required)
     * @return APIcreateDerivedPortfolioRequest
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> The created derived portfolio, with populated id </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public APIcreateDerivedPortfolioRequest createDerivedPortfolio(String scope) {
        return new APIcreateDerivedPortfolioRequest(scope);
    }
    private okhttp3.Call deleteDerivedPortfolioDetailsCall(String scope, String code, String effectiveAt, final ApiCallback _callback) throws ApiException {
        return deleteDerivedPortfolioDetailsCall(scope, code, effectiveAt,  _callback, new ConfigurationOptions());
    }

    private okhttp3.Call deleteDerivedPortfolioDetailsCall(String scope, String code, String effectiveAt, final ApiCallback _callback, ConfigurationOptions opts) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/derivedtransactionportfolios/{scope}/{code}/details"
            .replace("{" + "scope" + "}", localVarApiClient.escapeString(scope.toString()))
            .replace("{" + "code" + "}", localVarApiClient.escapeString(code.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (effectiveAt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("effectiveAt", effectiveAt));
        }

        final String[] localVarAccepts = {
            "text/plain",
            "application/json",
            "text/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback, opts);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteDerivedPortfolioDetailsValidateBeforeCall(String scope, String code, String effectiveAt, final ApiCallback _callback, ConfigurationOptions opts) throws ApiException {
        // verify the required parameter 'scope' is set
        if (scope == null) {
            throw new ApiException("Missing the required parameter 'scope' when calling deleteDerivedPortfolioDetails(Async)");
        }

        // verify the required parameter 'code' is set
        if (code == null) {
            throw new ApiException("Missing the required parameter 'code' when calling deleteDerivedPortfolioDetails(Async)");
        }

        return deleteDerivedPortfolioDetailsCall(scope, code, effectiveAt, _callback, opts);

    }


    private ApiResponse<DeletedEntityResponse> deleteDerivedPortfolioDetailsWithHttpInfo(String scope, String code, String effectiveAt) throws ApiException {
        okhttp3.Call localVarCall = deleteDerivedPortfolioDetailsValidateBeforeCall(scope, code, effectiveAt, null, new ConfigurationOptions());
        Type localVarReturnType = new TypeToken<DeletedEntityResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private ApiResponse<DeletedEntityResponse> deleteDerivedPortfolioDetailsWithHttpInfo(String scope, String code, String effectiveAt, ConfigurationOptions opts) throws ApiException {
        okhttp3.Call localVarCall = deleteDerivedPortfolioDetailsValidateBeforeCall(scope, code, effectiveAt, null, opts);
        Type localVarReturnType = new TypeToken<DeletedEntityResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call deleteDerivedPortfolioDetailsAsync(String scope, String code, String effectiveAt, final ApiCallback<DeletedEntityResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteDerivedPortfolioDetailsValidateBeforeCall(scope, code, effectiveAt, _callback, new ConfigurationOptions());
        Type localVarReturnType = new TypeToken<DeletedEntityResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    private okhttp3.Call deleteDerivedPortfolioDetailsAsync(String scope, String code, String effectiveAt, final ApiCallback<DeletedEntityResponse> _callback, ConfigurationOptions opts) throws ApiException {

        okhttp3.Call localVarCall = deleteDerivedPortfolioDetailsValidateBeforeCall(scope, code, effectiveAt, _callback, opts);
        Type localVarReturnType = new TypeToken<DeletedEntityResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class APIdeleteDerivedPortfolioDetailsRequest {
        private final String scope;
        private final String code;
        private String effectiveAt;

        private APIdeleteDerivedPortfolioDetailsRequest(String scope, String code) {
            this.scope = scope;
            this.code = code;
        }

        /**
         * Set effectiveAt
         * @param effectiveAt The effective date of the change. (optional)
         * @return APIdeleteDerivedPortfolioDetailsRequest
         */
        public APIdeleteDerivedPortfolioDetailsRequest effectiveAt(String effectiveAt) {
            this.effectiveAt = effectiveAt;
            return this;
        }

        /**
         * Build call for deleteDerivedPortfolioDetails
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
            <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return deleteDerivedPortfolioDetailsCall(scope, code, effectiveAt, _callback);
        }

        /**
         * Execute deleteDerivedPortfolioDetails request
         * @return DeletedEntityResponse
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
            <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
         </table>
         */
        public DeletedEntityResponse execute() throws ApiException {
            ApiResponse<DeletedEntityResponse> localVarResp = deleteDerivedPortfolioDetailsWithHttpInfo(scope, code, effectiveAt);
            return localVarResp.getData();
        }

        /**
         * Execute deleteDerivedPortfolioDetails request. Use any specified configuration options to override any other configuration for this request only.
         * @return DeletedEntityResponse
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
            <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
         </table>
         */
        public DeletedEntityResponse execute(ConfigurationOptions opts) throws ApiException {
            ApiResponse<DeletedEntityResponse> localVarResp = deleteDerivedPortfolioDetailsWithHttpInfo(scope, code, effectiveAt, opts);
            return localVarResp.getData();
        }

        /**
         * Execute deleteDerivedPortfolioDetails request with HTTP info returned
         * @return ApiResponse&lt;DeletedEntityResponse&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
            <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<DeletedEntityResponse> executeWithHttpInfo() throws ApiException {
            return deleteDerivedPortfolioDetailsWithHttpInfo(scope, code, effectiveAt);
        }

        /**
         * Execute deleteDerivedPortfolioDetails request with HTTP info returned. Use any specified configuration options to override any other configuration for this request only.
         * @return ApiResponse&lt;DeletedEntityResponse&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
            <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<DeletedEntityResponse> executeWithHttpInfo(ConfigurationOptions opts) throws ApiException {
            return deleteDerivedPortfolioDetailsWithHttpInfo(scope, code, effectiveAt, opts);
        }

        /**
         * Execute deleteDerivedPortfolioDetails request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
            <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<DeletedEntityResponse> _callback) throws ApiException {
            return deleteDerivedPortfolioDetailsAsync(scope, code, effectiveAt, _callback);
        }

        /**
         * Execute deleteDerivedPortfolioDetails request (asynchronously). Use any specified configuration options to override any other configuration for this request only.
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
            <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<DeletedEntityResponse> _callback, ConfigurationOptions opts) throws ApiException {
            return deleteDerivedPortfolioDetailsAsync(scope, code, effectiveAt, _callback, opts);
        }
    }

    /**
     * [EARLY ACCESS] DeleteDerivedPortfolioDetails: Delete derived portfolio details
     * Delete all the portfolio details for a derived transaction portfolio.
     * @param scope The scope of the derived transaction portfolio. (required)
     * @param code The code of the derived transaction portfolio. Together with the scope this uniquely identifies   the derived transaction portfolio. (required)
     * @return APIdeleteDerivedPortfolioDetailsRequest
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public APIdeleteDerivedPortfolioDetailsRequest deleteDerivedPortfolioDetails(String scope, String code) {
        return new APIdeleteDerivedPortfolioDetailsRequest(scope, code);
    }
}
