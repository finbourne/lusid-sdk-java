/*
 * LUSID API
 *
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.finbourne.lusid.api;

import com.finbourne.lusid.ApiCallback;
import com.finbourne.lusid.ApiClient;
import com.finbourne.lusid.ApiException;
import com.finbourne.lusid.ApiResponse;
import com.finbourne.lusid.Configuration;
import com.finbourne.lusid.Pair;
import com.finbourne.lusid.ProgressRequestBody;
import com.finbourne.lusid.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.finbourne.lusid.model.CreateCustomEntityTypeRequest;
import com.finbourne.lusid.model.CustomEntityType;
import com.finbourne.lusid.model.LusidProblemDetails;
import com.finbourne.lusid.model.LusidValidationProblemDetails;
import java.time.OffsetDateTime;
import com.finbourne.lusid.model.PagedResourceListOfCustomEntityType;
import com.finbourne.lusid.model.UpdateCustomEntityTypeRequest;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CustomEntityTypesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public CustomEntityTypesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public CustomEntityTypesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for createCustomEntityType
     * @param createCustomEntityTypeRequest The payload containing the description of the Custom Entity Type. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The created Custom Entity Type. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createCustomEntityTypeCall(CreateCustomEntityTypeRequest createCustomEntityTypeRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = createCustomEntityTypeRequest;

        // create path and map variables
        String localVarPath = "/api/customentitytypes";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain",
            "application/json",
            "text/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json-patch+json",
            "application/json",
            "text/json",
            "application/*+json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createCustomEntityTypeValidateBeforeCall(CreateCustomEntityTypeRequest createCustomEntityTypeRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'createCustomEntityTypeRequest' is set
        if (createCustomEntityTypeRequest == null) {
            throw new ApiException("Missing the required parameter 'createCustomEntityTypeRequest' when calling createCustomEntityType(Async)");
        }

        return createCustomEntityTypeCall(createCustomEntityTypeRequest, _callback);

    }

    /**
     * [EARLY ACCESS] CreateCustomEntityType: Define a new Custom Entity Type.
     * The API will return a Bad Request if the Custom Entity Type already exists.
     * @param createCustomEntityTypeRequest The payload containing the description of the Custom Entity Type. (required)
     * @return CustomEntityType
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The created Custom Entity Type. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public CustomEntityType createCustomEntityType(CreateCustomEntityTypeRequest createCustomEntityTypeRequest) throws ApiException {
        ApiResponse<CustomEntityType> localVarResp = createCustomEntityTypeWithHttpInfo(createCustomEntityTypeRequest);
        return localVarResp.getData();
    }

    /**
     * [EARLY ACCESS] CreateCustomEntityType: Define a new Custom Entity Type.
     * The API will return a Bad Request if the Custom Entity Type already exists.
     * @param createCustomEntityTypeRequest The payload containing the description of the Custom Entity Type. (required)
     * @return ApiResponse&lt;CustomEntityType&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The created Custom Entity Type. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CustomEntityType> createCustomEntityTypeWithHttpInfo(CreateCustomEntityTypeRequest createCustomEntityTypeRequest) throws ApiException {
        okhttp3.Call localVarCall = createCustomEntityTypeValidateBeforeCall(createCustomEntityTypeRequest, null);
        Type localVarReturnType = new TypeToken<CustomEntityType>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * [EARLY ACCESS] CreateCustomEntityType: Define a new Custom Entity Type. (asynchronously)
     * The API will return a Bad Request if the Custom Entity Type already exists.
     * @param createCustomEntityTypeRequest The payload containing the description of the Custom Entity Type. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The created Custom Entity Type. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createCustomEntityTypeAsync(CreateCustomEntityTypeRequest createCustomEntityTypeRequest, final ApiCallback<CustomEntityType> _callback) throws ApiException {

        okhttp3.Call localVarCall = createCustomEntityTypeValidateBeforeCall(createCustomEntityTypeRequest, _callback);
        Type localVarReturnType = new TypeToken<CustomEntityType>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getCustomEntityType
     * @param entityType The identifier for the Custom Entity Type, derived from the \&quot;entityTypeName\&quot; provided on creation. (required)
     * @param asAt The AsAt datetime at which to retrieve the definition. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The requested Custom Entity Type. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getCustomEntityTypeCall(String entityType, OffsetDateTime asAt, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/customentitytypes/{entityType}"
            .replace("{" + "entityType" + "}", localVarApiClient.escapeString(entityType.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (asAt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("asAt", asAt));
        }

        final String[] localVarAccepts = {
            "text/plain",
            "application/json",
            "text/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getCustomEntityTypeValidateBeforeCall(String entityType, OffsetDateTime asAt, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'entityType' is set
        if (entityType == null) {
            throw new ApiException("Missing the required parameter 'entityType' when calling getCustomEntityType(Async)");
        }

        return getCustomEntityTypeCall(entityType, asAt, _callback);

    }

    /**
     * [EARLY ACCESS] GetCustomEntityType: Get a Custom Entity Type.
     * Retrieve a specific Custom Entity Type at a point in AsAt time.
     * @param entityType The identifier for the Custom Entity Type, derived from the \&quot;entityTypeName\&quot; provided on creation. (required)
     * @param asAt The AsAt datetime at which to retrieve the definition. (optional)
     * @return CustomEntityType
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The requested Custom Entity Type. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public CustomEntityType getCustomEntityType(String entityType, OffsetDateTime asAt) throws ApiException {
        ApiResponse<CustomEntityType> localVarResp = getCustomEntityTypeWithHttpInfo(entityType, asAt);
        return localVarResp.getData();
    }

    /**
     * [EARLY ACCESS] GetCustomEntityType: Get a Custom Entity Type.
     * Retrieve a specific Custom Entity Type at a point in AsAt time.
     * @param entityType The identifier for the Custom Entity Type, derived from the \&quot;entityTypeName\&quot; provided on creation. (required)
     * @param asAt The AsAt datetime at which to retrieve the definition. (optional)
     * @return ApiResponse&lt;CustomEntityType&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The requested Custom Entity Type. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CustomEntityType> getCustomEntityTypeWithHttpInfo(String entityType, OffsetDateTime asAt) throws ApiException {
        okhttp3.Call localVarCall = getCustomEntityTypeValidateBeforeCall(entityType, asAt, null);
        Type localVarReturnType = new TypeToken<CustomEntityType>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * [EARLY ACCESS] GetCustomEntityType: Get a Custom Entity Type. (asynchronously)
     * Retrieve a specific Custom Entity Type at a point in AsAt time.
     * @param entityType The identifier for the Custom Entity Type, derived from the \&quot;entityTypeName\&quot; provided on creation. (required)
     * @param asAt The AsAt datetime at which to retrieve the definition. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The requested Custom Entity Type. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getCustomEntityTypeAsync(String entityType, OffsetDateTime asAt, final ApiCallback<CustomEntityType> _callback) throws ApiException {

        okhttp3.Call localVarCall = getCustomEntityTypeValidateBeforeCall(entityType, asAt, _callback);
        Type localVarReturnType = new TypeToken<CustomEntityType>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for listCustomEntityTypes
     * @param asAt The asAt datetime at which to list the entities. Defaults to returning the latest version              of each Custom Entity Type if not specified. (optional)
     * @param limit When paginating, limit the results to this number. Defaults to 100 if not specified. (optional)
     * @param filter Expression to filter the results. For more information about filtering              results, see https://support.lusid.com/knowledgebase/article/KA-01914. (optional)
     * @param sortBy A list of field names to sort by, each suffixed by \&quot; ASC\&quot; or \&quot; DESC\&quot; (optional)
     * @param page The pagination token to use to continue listing entities; this              value is returned from the previous call. If a pagination token is provided, the filter, limit, sortBy,              and asAt fields must not have changed since the original request. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List Custom Entity Types. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listCustomEntityTypesCall(OffsetDateTime asAt, Integer limit, String filter, List<String> sortBy, String page, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/customentitytypes";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (asAt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("asAt", asAt));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter", filter));
        }

        if (sortBy != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "sortBy", sortBy));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        final String[] localVarAccepts = {
            "text/plain",
            "application/json",
            "text/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listCustomEntityTypesValidateBeforeCall(OffsetDateTime asAt, Integer limit, String filter, List<String> sortBy, String page, final ApiCallback _callback) throws ApiException {
        return listCustomEntityTypesCall(asAt, limit, filter, sortBy, page, _callback);

    }

    /**
     * [EARLY ACCESS] ListCustomEntityTypes: List Custom Entity Types.
     * List all Custom Entity Types matching particular criteria.
     * @param asAt The asAt datetime at which to list the entities. Defaults to returning the latest version              of each Custom Entity Type if not specified. (optional)
     * @param limit When paginating, limit the results to this number. Defaults to 100 if not specified. (optional)
     * @param filter Expression to filter the results. For more information about filtering              results, see https://support.lusid.com/knowledgebase/article/KA-01914. (optional)
     * @param sortBy A list of field names to sort by, each suffixed by \&quot; ASC\&quot; or \&quot; DESC\&quot; (optional)
     * @param page The pagination token to use to continue listing entities; this              value is returned from the previous call. If a pagination token is provided, the filter, limit, sortBy,              and asAt fields must not have changed since the original request. (optional)
     * @return PagedResourceListOfCustomEntityType
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List Custom Entity Types. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public PagedResourceListOfCustomEntityType listCustomEntityTypes(OffsetDateTime asAt, Integer limit, String filter, List<String> sortBy, String page) throws ApiException {
        ApiResponse<PagedResourceListOfCustomEntityType> localVarResp = listCustomEntityTypesWithHttpInfo(asAt, limit, filter, sortBy, page);
        return localVarResp.getData();
    }

    /**
     * [EARLY ACCESS] ListCustomEntityTypes: List Custom Entity Types.
     * List all Custom Entity Types matching particular criteria.
     * @param asAt The asAt datetime at which to list the entities. Defaults to returning the latest version              of each Custom Entity Type if not specified. (optional)
     * @param limit When paginating, limit the results to this number. Defaults to 100 if not specified. (optional)
     * @param filter Expression to filter the results. For more information about filtering              results, see https://support.lusid.com/knowledgebase/article/KA-01914. (optional)
     * @param sortBy A list of field names to sort by, each suffixed by \&quot; ASC\&quot; or \&quot; DESC\&quot; (optional)
     * @param page The pagination token to use to continue listing entities; this              value is returned from the previous call. If a pagination token is provided, the filter, limit, sortBy,              and asAt fields must not have changed since the original request. (optional)
     * @return ApiResponse&lt;PagedResourceListOfCustomEntityType&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List Custom Entity Types. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PagedResourceListOfCustomEntityType> listCustomEntityTypesWithHttpInfo(OffsetDateTime asAt, Integer limit, String filter, List<String> sortBy, String page) throws ApiException {
        okhttp3.Call localVarCall = listCustomEntityTypesValidateBeforeCall(asAt, limit, filter, sortBy, page, null);
        Type localVarReturnType = new TypeToken<PagedResourceListOfCustomEntityType>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * [EARLY ACCESS] ListCustomEntityTypes: List Custom Entity Types. (asynchronously)
     * List all Custom Entity Types matching particular criteria.
     * @param asAt The asAt datetime at which to list the entities. Defaults to returning the latest version              of each Custom Entity Type if not specified. (optional)
     * @param limit When paginating, limit the results to this number. Defaults to 100 if not specified. (optional)
     * @param filter Expression to filter the results. For more information about filtering              results, see https://support.lusid.com/knowledgebase/article/KA-01914. (optional)
     * @param sortBy A list of field names to sort by, each suffixed by \&quot; ASC\&quot; or \&quot; DESC\&quot; (optional)
     * @param page The pagination token to use to continue listing entities; this              value is returned from the previous call. If a pagination token is provided, the filter, limit, sortBy,              and asAt fields must not have changed since the original request. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> List Custom Entity Types. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listCustomEntityTypesAsync(OffsetDateTime asAt, Integer limit, String filter, List<String> sortBy, String page, final ApiCallback<PagedResourceListOfCustomEntityType> _callback) throws ApiException {

        okhttp3.Call localVarCall = listCustomEntityTypesValidateBeforeCall(asAt, limit, filter, sortBy, page, _callback);
        Type localVarReturnType = new TypeToken<PagedResourceListOfCustomEntityType>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for updateCustomEntityType
     * @param entityType The identifier for the Custom Entity Type, derived from the \&quot;entityTypeName\&quot; provided on creation. (required)
     * @param updateCustomEntityTypeRequest The payload containing the description of the Custom Entity Type. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The updated Custom Entity Type. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updateCustomEntityTypeCall(String entityType, UpdateCustomEntityTypeRequest updateCustomEntityTypeRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = updateCustomEntityTypeRequest;

        // create path and map variables
        String localVarPath = "/api/customentitytypes/{entityType}"
            .replace("{" + "entityType" + "}", localVarApiClient.escapeString(entityType.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain",
            "application/json",
            "text/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json-patch+json",
            "application/json",
            "text/json",
            "application/*+json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updateCustomEntityTypeValidateBeforeCall(String entityType, UpdateCustomEntityTypeRequest updateCustomEntityTypeRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'entityType' is set
        if (entityType == null) {
            throw new ApiException("Missing the required parameter 'entityType' when calling updateCustomEntityType(Async)");
        }

        // verify the required parameter 'updateCustomEntityTypeRequest' is set
        if (updateCustomEntityTypeRequest == null) {
            throw new ApiException("Missing the required parameter 'updateCustomEntityTypeRequest' when calling updateCustomEntityType(Async)");
        }

        return updateCustomEntityTypeCall(entityType, updateCustomEntityTypeRequest, _callback);

    }

    /**
     * [EARLY ACCESS] UpdateCustomEntityType: Modify an existing Custom Entity Type.
     * The API will return a Bad Request if the Custom Entity Type does not exist.
     * @param entityType The identifier for the Custom Entity Type, derived from the \&quot;entityTypeName\&quot; provided on creation. (required)
     * @param updateCustomEntityTypeRequest The payload containing the description of the Custom Entity Type. (required)
     * @return CustomEntityType
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The updated Custom Entity Type. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public CustomEntityType updateCustomEntityType(String entityType, UpdateCustomEntityTypeRequest updateCustomEntityTypeRequest) throws ApiException {
        ApiResponse<CustomEntityType> localVarResp = updateCustomEntityTypeWithHttpInfo(entityType, updateCustomEntityTypeRequest);
        return localVarResp.getData();
    }

    /**
     * [EARLY ACCESS] UpdateCustomEntityType: Modify an existing Custom Entity Type.
     * The API will return a Bad Request if the Custom Entity Type does not exist.
     * @param entityType The identifier for the Custom Entity Type, derived from the \&quot;entityTypeName\&quot; provided on creation. (required)
     * @param updateCustomEntityTypeRequest The payload containing the description of the Custom Entity Type. (required)
     * @return ApiResponse&lt;CustomEntityType&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The updated Custom Entity Type. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CustomEntityType> updateCustomEntityTypeWithHttpInfo(String entityType, UpdateCustomEntityTypeRequest updateCustomEntityTypeRequest) throws ApiException {
        okhttp3.Call localVarCall = updateCustomEntityTypeValidateBeforeCall(entityType, updateCustomEntityTypeRequest, null);
        Type localVarReturnType = new TypeToken<CustomEntityType>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * [EARLY ACCESS] UpdateCustomEntityType: Modify an existing Custom Entity Type. (asynchronously)
     * The API will return a Bad Request if the Custom Entity Type does not exist.
     * @param entityType The identifier for the Custom Entity Type, derived from the \&quot;entityTypeName\&quot; provided on creation. (required)
     * @param updateCustomEntityTypeRequest The payload containing the description of the Custom Entity Type. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The updated Custom Entity Type. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updateCustomEntityTypeAsync(String entityType, UpdateCustomEntityTypeRequest updateCustomEntityTypeRequest, final ApiCallback<CustomEntityType> _callback) throws ApiException {

        okhttp3.Call localVarCall = updateCustomEntityTypeValidateBeforeCall(entityType, updateCustomEntityTypeRequest, _callback);
        Type localVarReturnType = new TypeToken<CustomEntityType>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
