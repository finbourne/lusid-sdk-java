/*
 * LUSID API
 *
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.finbourne.lusid;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapter;
import com.google.gson.internal.bind.util.ISO8601Utils;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.google.gson.JsonElement;
import io.gsonfire.GsonFireBuilder;
import io.gsonfire.TypeSelector;

import okio.ByteString;

import java.io.IOException;
import java.io.StringReader;
import java.lang.reflect.Type;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.ParsePosition;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Locale;
import java.util.Map;
import java.util.HashMap;

/*
 * A JSON utility class
 *
 * NOTE: in the future, this class may be converted to static, which may break
 *       backward-compatibility
 */
public class JSON {
    private static Gson gson;
    private static boolean isLenientOnJson = false;
    private static DateTypeAdapter dateTypeAdapter = new DateTypeAdapter();
    private static SqlDateTypeAdapter sqlDateTypeAdapter = new SqlDateTypeAdapter();
    private static OffsetDateTimeTypeAdapter offsetDateTimeTypeAdapter = new OffsetDateTimeTypeAdapter();
    private static LocalDateTypeAdapter localDateTypeAdapter = new LocalDateTypeAdapter();
    private static ByteArrayAdapter byteArrayAdapter = new ByteArrayAdapter();

    @SuppressWarnings("unchecked")
    public static GsonBuilder createGson() {
        GsonFireBuilder fireBuilder = new GsonFireBuilder()
                .registerTypeSelector(com.finbourne.lusid.model.AccumulationEvent.class, new TypeSelector<com.finbourne.lusid.model.AccumulationEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.AccumulationEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AccumulationEvent", com.finbourne.lusid.model.AccumulationEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.AddressKeyComplianceParameter.class, new TypeSelector<com.finbourne.lusid.model.AddressKeyComplianceParameter>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.AddressKeyComplianceParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AddressKeyComplianceParameter", com.finbourne.lusid.model.AddressKeyComplianceParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceParameterType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.AddressKeyList.class, new TypeSelector<com.finbourne.lusid.model.AddressKeyList>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.AddressKeyList> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AddressKeyList", com.finbourne.lusid.model.AddressKeyList.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "referenceListType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.AddressKeyListComplianceParameter.class, new TypeSelector<com.finbourne.lusid.model.AddressKeyListComplianceParameter>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.AddressKeyListComplianceParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AddressKeyListComplianceParameter", com.finbourne.lusid.model.AddressKeyListComplianceParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceParameterType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.AmortisationEvent.class, new TypeSelector<com.finbourne.lusid.model.AmortisationEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.AmortisationEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AmortisationEvent", com.finbourne.lusid.model.AmortisationEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.Basket.class, new TypeSelector<com.finbourne.lusid.model.Basket>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.Basket> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("Basket", com.finbourne.lusid.model.Basket.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.Bond.class, new TypeSelector<com.finbourne.lusid.model.Bond>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.Bond> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("Bond", com.finbourne.lusid.model.Bond.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.BondConversionSchedule.class, new TypeSelector<com.finbourne.lusid.model.BondConversionSchedule>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.BondConversionSchedule> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("BondConversionSchedule", com.finbourne.lusid.model.BondConversionSchedule.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "scheduleType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.BondCouponEvent.class, new TypeSelector<com.finbourne.lusid.model.BondCouponEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.BondCouponEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("BondCouponEvent", com.finbourne.lusid.model.BondCouponEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.BondDefaultEvent.class, new TypeSelector<com.finbourne.lusid.model.BondDefaultEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.BondDefaultEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("BondDefaultEvent", com.finbourne.lusid.model.BondDefaultEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.BondPrincipalEvent.class, new TypeSelector<com.finbourne.lusid.model.BondPrincipalEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.BondPrincipalEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("BondPrincipalEvent", com.finbourne.lusid.model.BondPrincipalEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.BonusIssueEvent.class, new TypeSelector<com.finbourne.lusid.model.BonusIssueEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.BonusIssueEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("BonusIssueEvent", com.finbourne.lusid.model.BonusIssueEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.BoolComplianceParameter.class, new TypeSelector<com.finbourne.lusid.model.BoolComplianceParameter>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.BoolComplianceParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("BoolComplianceParameter", com.finbourne.lusid.model.BoolComplianceParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceParameterType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.BoolListComplianceParameter.class, new TypeSelector<com.finbourne.lusid.model.BoolListComplianceParameter>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.BoolListComplianceParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("BoolListComplianceParameter", com.finbourne.lusid.model.BoolListComplianceParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceParameterType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.BranchStep.class, new TypeSelector<com.finbourne.lusid.model.BranchStep>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.BranchStep> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("BranchStep", com.finbourne.lusid.model.BranchStep.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceStepType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.BranchStepRequest.class, new TypeSelector<com.finbourne.lusid.model.BranchStepRequest>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.BranchStepRequest> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("BranchStepRequest", com.finbourne.lusid.model.BranchStepRequest.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceStepTypeRequest"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.CalendarDependency.class, new TypeSelector<com.finbourne.lusid.model.CalendarDependency>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.CalendarDependency> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CalendarDependency", com.finbourne.lusid.model.CalendarDependency.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "dependencyType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.CallOnIntermediateSecuritiesEvent.class, new TypeSelector<com.finbourne.lusid.model.CallOnIntermediateSecuritiesEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.CallOnIntermediateSecuritiesEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CallOnIntermediateSecuritiesEvent", com.finbourne.lusid.model.CallOnIntermediateSecuritiesEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.CapFloor.class, new TypeSelector<com.finbourne.lusid.model.CapFloor>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.CapFloor> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CapFloor", com.finbourne.lusid.model.CapFloor.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.CapitalDistributionEvent.class, new TypeSelector<com.finbourne.lusid.model.CapitalDistributionEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.CapitalDistributionEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CapitalDistributionEvent", com.finbourne.lusid.model.CapitalDistributionEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.Cash.class, new TypeSelector<com.finbourne.lusid.model.Cash>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.Cash> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("Cash", com.finbourne.lusid.model.Cash.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.CashDependency.class, new TypeSelector<com.finbourne.lusid.model.CashDependency>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.CashDependency> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CashDependency", com.finbourne.lusid.model.CashDependency.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "dependencyType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.CashDividendEvent.class, new TypeSelector<com.finbourne.lusid.model.CashDividendEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.CashDividendEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CashDividendEvent", com.finbourne.lusid.model.CashDividendEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.CashFlowEvent.class, new TypeSelector<com.finbourne.lusid.model.CashFlowEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.CashFlowEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CashFlowEvent", com.finbourne.lusid.model.CashFlowEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.CashFlowValue.class, new TypeSelector<com.finbourne.lusid.model.CashFlowValue>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.CashFlowValue> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CashFlowValue", com.finbourne.lusid.model.CashFlowValue.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "resultValueType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.CashFlowValueSet.class, new TypeSelector<com.finbourne.lusid.model.CashFlowValueSet>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.CashFlowValueSet> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CashFlowValueSet", com.finbourne.lusid.model.CashFlowValueSet.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "resultValueType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.CashPerpetual.class, new TypeSelector<com.finbourne.lusid.model.CashPerpetual>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.CashPerpetual> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CashPerpetual", com.finbourne.lusid.model.CashPerpetual.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.CdsCreditEvent.class, new TypeSelector<com.finbourne.lusid.model.CdsCreditEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.CdsCreditEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CdsCreditEvent", com.finbourne.lusid.model.CdsCreditEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.CdsIndex.class, new TypeSelector<com.finbourne.lusid.model.CdsIndex>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.CdsIndex> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CdsIndex", com.finbourne.lusid.model.CdsIndex.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.CdxCreditEvent.class, new TypeSelector<com.finbourne.lusid.model.CdxCreditEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.CdxCreditEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CdxCreditEvent", com.finbourne.lusid.model.CdxCreditEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.CheckStep.class, new TypeSelector<com.finbourne.lusid.model.CheckStep>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.CheckStep> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CheckStep", com.finbourne.lusid.model.CheckStep.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceStepType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.CheckStepRequest.class, new TypeSelector<com.finbourne.lusid.model.CheckStepRequest>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.CheckStepRequest> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CheckStepRequest", com.finbourne.lusid.model.CheckStepRequest.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceStepTypeRequest"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.CloseEvent.class, new TypeSelector<com.finbourne.lusid.model.CloseEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.CloseEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CloseEvent", com.finbourne.lusid.model.CloseEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ComplexBond.class, new TypeSelector<com.finbourne.lusid.model.ComplexBond>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ComplexBond> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ComplexBond", com.finbourne.lusid.model.ComplexBond.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ComplexMarketData.class, new TypeSelector<com.finbourne.lusid.model.ComplexMarketData>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ComplexMarketData> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ConstantVolatilitySurface", com.finbourne.lusid.model.ConstantVolatilitySurface.class);
                        classByDiscriminatorValue.put("CreditSpreadCurveData", com.finbourne.lusid.model.CreditSpreadCurveData.class);
                        classByDiscriminatorValue.put("DiscountFactorCurveData", com.finbourne.lusid.model.DiscountFactorCurveData.class);
                        classByDiscriminatorValue.put("EquityCurveByPricesData", com.finbourne.lusid.model.EquityCurveByPricesData.class);
                        classByDiscriminatorValue.put("EquityVolSurfaceData", com.finbourne.lusid.model.EquityVolSurfaceData.class);
                        classByDiscriminatorValue.put("FxForwardCurveByQuoteReference", com.finbourne.lusid.model.FxForwardCurveByQuoteReference.class);
                        classByDiscriminatorValue.put("FxForwardCurveData", com.finbourne.lusid.model.FxForwardCurveData.class);
                        classByDiscriminatorValue.put("FxForwardPipsCurveData", com.finbourne.lusid.model.FxForwardPipsCurveData.class);
                        classByDiscriminatorValue.put("FxForwardTenorCurveData", com.finbourne.lusid.model.FxForwardTenorCurveData.class);
                        classByDiscriminatorValue.put("FxForwardTenorPipsCurveData", com.finbourne.lusid.model.FxForwardTenorPipsCurveData.class);
                        classByDiscriminatorValue.put("FxVolSurfaceData", com.finbourne.lusid.model.FxVolSurfaceData.class);
                        classByDiscriminatorValue.put("IrVolCubeData", com.finbourne.lusid.model.IrVolCubeData.class);
                        classByDiscriminatorValue.put("OpaqueMarketData", com.finbourne.lusid.model.OpaqueMarketData.class);
                        classByDiscriminatorValue.put("YieldCurveData", com.finbourne.lusid.model.YieldCurveData.class);
                        classByDiscriminatorValue.put("ComplexMarketData", com.finbourne.lusid.model.ComplexMarketData.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "marketDataType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ComplianceParameter.class, new TypeSelector<com.finbourne.lusid.model.ComplianceParameter>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ComplianceParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AddressKeyComplianceParameter", com.finbourne.lusid.model.AddressKeyComplianceParameter.class);
                        classByDiscriminatorValue.put("AddressKeyListComplianceParameter", com.finbourne.lusid.model.AddressKeyListComplianceParameter.class);
                        classByDiscriminatorValue.put("BoolComplianceParameter", com.finbourne.lusid.model.BoolComplianceParameter.class);
                        classByDiscriminatorValue.put("BoolListComplianceParameter", com.finbourne.lusid.model.BoolListComplianceParameter.class);
                        classByDiscriminatorValue.put("DateTimeComplianceParameter", com.finbourne.lusid.model.DateTimeComplianceParameter.class);
                        classByDiscriminatorValue.put("DateTimeListComplianceParameter", com.finbourne.lusid.model.DateTimeListComplianceParameter.class);
                        classByDiscriminatorValue.put("DecimalComplianceParameter", com.finbourne.lusid.model.DecimalComplianceParameter.class);
                        classByDiscriminatorValue.put("DecimalListComplianceParameter", com.finbourne.lusid.model.DecimalListComplianceParameter.class);
                        classByDiscriminatorValue.put("FilterPredicateComplianceParameter", com.finbourne.lusid.model.FilterPredicateComplianceParameter.class);
                        classByDiscriminatorValue.put("GroupBySelectorComplianceParameter", com.finbourne.lusid.model.GroupBySelectorComplianceParameter.class);
                        classByDiscriminatorValue.put("GroupCalculationComplianceParameter", com.finbourne.lusid.model.GroupCalculationComplianceParameter.class);
                        classByDiscriminatorValue.put("GroupFilterPredicateComplianceParameter", com.finbourne.lusid.model.GroupFilterPredicateComplianceParameter.class);
                        classByDiscriminatorValue.put("InstrumentListComplianceParameter", com.finbourne.lusid.model.InstrumentListComplianceParameter.class);
                        classByDiscriminatorValue.put("PortfolioGroupIdComplianceParameter", com.finbourne.lusid.model.PortfolioGroupIdComplianceParameter.class);
                        classByDiscriminatorValue.put("PortfolioGroupIdListComplianceParameter", com.finbourne.lusid.model.PortfolioGroupIdListComplianceParameter.class);
                        classByDiscriminatorValue.put("PortfolioIdComplianceParameter", com.finbourne.lusid.model.PortfolioIdComplianceParameter.class);
                        classByDiscriminatorValue.put("PortfolioIdListComplianceParameter", com.finbourne.lusid.model.PortfolioIdListComplianceParameter.class);
                        classByDiscriminatorValue.put("PropertyKeyComplianceParameter", com.finbourne.lusid.model.PropertyKeyComplianceParameter.class);
                        classByDiscriminatorValue.put("PropertyKeyListComplianceParameter", com.finbourne.lusid.model.PropertyKeyListComplianceParameter.class);
                        classByDiscriminatorValue.put("PropertyListComplianceParameter", com.finbourne.lusid.model.PropertyListComplianceParameter.class);
                        classByDiscriminatorValue.put("StringComplianceParameter", com.finbourne.lusid.model.StringComplianceParameter.class);
                        classByDiscriminatorValue.put("StringListComplianceParameter", com.finbourne.lusid.model.StringListComplianceParameter.class);
                        classByDiscriminatorValue.put("ComplianceParameter", com.finbourne.lusid.model.ComplianceParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceParameterType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ComplianceStep.class, new TypeSelector<com.finbourne.lusid.model.ComplianceStep>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ComplianceStep> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("BranchStep", com.finbourne.lusid.model.BranchStep.class);
                        classByDiscriminatorValue.put("CheckStep", com.finbourne.lusid.model.CheckStep.class);
                        classByDiscriminatorValue.put("FilterStep", com.finbourne.lusid.model.FilterStep.class);
                        classByDiscriminatorValue.put("GroupByStep", com.finbourne.lusid.model.GroupByStep.class);
                        classByDiscriminatorValue.put("GroupFilterStep", com.finbourne.lusid.model.GroupFilterStep.class);
                        classByDiscriminatorValue.put("IntermediateComplianceStep", com.finbourne.lusid.model.IntermediateComplianceStep.class);
                        classByDiscriminatorValue.put("PercentCheckStep", com.finbourne.lusid.model.PercentCheckStep.class);
                        classByDiscriminatorValue.put("RecombineStep", com.finbourne.lusid.model.RecombineStep.class);
                        classByDiscriminatorValue.put("ComplianceStep", com.finbourne.lusid.model.ComplianceStep.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceStepType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ComplianceStepRequest.class, new TypeSelector<com.finbourne.lusid.model.ComplianceStepRequest>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ComplianceStepRequest> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("BranchStepRequest", com.finbourne.lusid.model.BranchStepRequest.class);
                        classByDiscriminatorValue.put("CheckStepRequest", com.finbourne.lusid.model.CheckStepRequest.class);
                        classByDiscriminatorValue.put("FilterStepRequest", com.finbourne.lusid.model.FilterStepRequest.class);
                        classByDiscriminatorValue.put("GroupByStepRequest", com.finbourne.lusid.model.GroupByStepRequest.class);
                        classByDiscriminatorValue.put("GroupFilterStepRequest", com.finbourne.lusid.model.GroupFilterStepRequest.class);
                        classByDiscriminatorValue.put("IntermediateComplianceStepRequest", com.finbourne.lusid.model.IntermediateComplianceStepRequest.class);
                        classByDiscriminatorValue.put("PercentCheckStepRequest", com.finbourne.lusid.model.PercentCheckStepRequest.class);
                        classByDiscriminatorValue.put("ComplianceStepRequest", com.finbourne.lusid.model.ComplianceStepRequest.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceStepTypeRequest"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ConstantVolatilitySurface.class, new TypeSelector<com.finbourne.lusid.model.ConstantVolatilitySurface>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ConstantVolatilitySurface> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ConstantVolatilitySurface", com.finbourne.lusid.model.ConstantVolatilitySurface.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "marketDataType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ContractForDifference.class, new TypeSelector<com.finbourne.lusid.model.ContractForDifference>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ContractForDifference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ContractForDifference", com.finbourne.lusid.model.ContractForDifference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.CreditDefaultSwap.class, new TypeSelector<com.finbourne.lusid.model.CreditDefaultSwap>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.CreditDefaultSwap> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CreditDefaultSwap", com.finbourne.lusid.model.CreditDefaultSwap.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.CreditPremiumCashFlowEvent.class, new TypeSelector<com.finbourne.lusid.model.CreditPremiumCashFlowEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.CreditPremiumCashFlowEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CreditPremiumCashFlowEvent", com.finbourne.lusid.model.CreditPremiumCashFlowEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.CreditSpreadCurveData.class, new TypeSelector<com.finbourne.lusid.model.CreditSpreadCurveData>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.CreditSpreadCurveData> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CreditSpreadCurveData", com.finbourne.lusid.model.CreditSpreadCurveData.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "marketDataType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.CurveOptions.class, new TypeSelector<com.finbourne.lusid.model.CurveOptions>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.CurveOptions> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CurveOptions", com.finbourne.lusid.model.CurveOptions.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "marketDataOptionsType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.DateTimeComplianceParameter.class, new TypeSelector<com.finbourne.lusid.model.DateTimeComplianceParameter>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.DateTimeComplianceParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DateTimeComplianceParameter", com.finbourne.lusid.model.DateTimeComplianceParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceParameterType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.DateTimeListComplianceParameter.class, new TypeSelector<com.finbourne.lusid.model.DateTimeListComplianceParameter>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.DateTimeListComplianceParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DateTimeListComplianceParameter", com.finbourne.lusid.model.DateTimeListComplianceParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceParameterType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.DecimalComplianceParameter.class, new TypeSelector<com.finbourne.lusid.model.DecimalComplianceParameter>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.DecimalComplianceParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DecimalComplianceParameter", com.finbourne.lusid.model.DecimalComplianceParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceParameterType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.DecimalList.class, new TypeSelector<com.finbourne.lusid.model.DecimalList>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.DecimalList> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DecimalList", com.finbourne.lusid.model.DecimalList.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "referenceListType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.DecimalListComplianceParameter.class, new TypeSelector<com.finbourne.lusid.model.DecimalListComplianceParameter>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.DecimalListComplianceParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DecimalListComplianceParameter", com.finbourne.lusid.model.DecimalListComplianceParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceParameterType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.DiscountFactorCurveData.class, new TypeSelector<com.finbourne.lusid.model.DiscountFactorCurveData>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.DiscountFactorCurveData> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DiscountFactorCurveData", com.finbourne.lusid.model.DiscountFactorCurveData.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "marketDataType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.DiscountingDependency.class, new TypeSelector<com.finbourne.lusid.model.DiscountingDependency>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.DiscountingDependency> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DiscountingDependency", com.finbourne.lusid.model.DiscountingDependency.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "dependencyType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.DividendOptionEvent.class, new TypeSelector<com.finbourne.lusid.model.DividendOptionEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.DividendOptionEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DividendOptionEvent", com.finbourne.lusid.model.DividendOptionEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.DividendReinvestmentEvent.class, new TypeSelector<com.finbourne.lusid.model.DividendReinvestmentEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.DividendReinvestmentEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("DividendReinvestmentEvent", com.finbourne.lusid.model.DividendReinvestmentEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.EconomicDependency.class, new TypeSelector<com.finbourne.lusid.model.EconomicDependency>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.EconomicDependency> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CalendarDependency", com.finbourne.lusid.model.CalendarDependency.class);
                        classByDiscriminatorValue.put("CashDependency", com.finbourne.lusid.model.CashDependency.class);
                        classByDiscriminatorValue.put("DiscountingDependency", com.finbourne.lusid.model.DiscountingDependency.class);
                        classByDiscriminatorValue.put("EquityCurveDependency", com.finbourne.lusid.model.EquityCurveDependency.class);
                        classByDiscriminatorValue.put("EquityVolDependency", com.finbourne.lusid.model.EquityVolDependency.class);
                        classByDiscriminatorValue.put("FxDependency", com.finbourne.lusid.model.FxDependency.class);
                        classByDiscriminatorValue.put("FxForwardsDependency", com.finbourne.lusid.model.FxForwardsDependency.class);
                        classByDiscriminatorValue.put("FxVolDependency", com.finbourne.lusid.model.FxVolDependency.class);
                        classByDiscriminatorValue.put("IndexProjectionDependency", com.finbourne.lusid.model.IndexProjectionDependency.class);
                        classByDiscriminatorValue.put("InflationFixingDependency", com.finbourne.lusid.model.InflationFixingDependency.class);
                        classByDiscriminatorValue.put("IrVolDependency", com.finbourne.lusid.model.IrVolDependency.class);
                        classByDiscriminatorValue.put("OpaqueDependency", com.finbourne.lusid.model.OpaqueDependency.class);
                        classByDiscriminatorValue.put("QuoteDependency", com.finbourne.lusid.model.QuoteDependency.class);
                        classByDiscriminatorValue.put("VendorDependency", com.finbourne.lusid.model.VendorDependency.class);
                        classByDiscriminatorValue.put("EconomicDependency", com.finbourne.lusid.model.EconomicDependency.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "dependencyType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.EmptyModelOptions.class, new TypeSelector<com.finbourne.lusid.model.EmptyModelOptions>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.EmptyModelOptions> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("EmptyModelOptions", com.finbourne.lusid.model.EmptyModelOptions.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "modelOptionsType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.Equity.class, new TypeSelector<com.finbourne.lusid.model.Equity>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.Equity> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("Equity", com.finbourne.lusid.model.Equity.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.EquityCurveByPricesData.class, new TypeSelector<com.finbourne.lusid.model.EquityCurveByPricesData>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.EquityCurveByPricesData> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("EquityCurveByPricesData", com.finbourne.lusid.model.EquityCurveByPricesData.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "marketDataType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.EquityCurveDependency.class, new TypeSelector<com.finbourne.lusid.model.EquityCurveDependency>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.EquityCurveDependency> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("EquityCurveDependency", com.finbourne.lusid.model.EquityCurveDependency.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "dependencyType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.EquityModelOptions.class, new TypeSelector<com.finbourne.lusid.model.EquityModelOptions>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.EquityModelOptions> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("EquityModelOptions", com.finbourne.lusid.model.EquityModelOptions.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "modelOptionsType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.EquityOption.class, new TypeSelector<com.finbourne.lusid.model.EquityOption>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.EquityOption> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("EquityOption", com.finbourne.lusid.model.EquityOption.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.EquitySwap.class, new TypeSelector<com.finbourne.lusid.model.EquitySwap>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.EquitySwap> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("EquitySwap", com.finbourne.lusid.model.EquitySwap.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.EquityVolDependency.class, new TypeSelector<com.finbourne.lusid.model.EquityVolDependency>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.EquityVolDependency> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("EquityVolDependency", com.finbourne.lusid.model.EquityVolDependency.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "dependencyType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.EquityVolSurfaceData.class, new TypeSelector<com.finbourne.lusid.model.EquityVolSurfaceData>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.EquityVolSurfaceData> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("EquityVolSurfaceData", com.finbourne.lusid.model.EquityVolSurfaceData.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "marketDataType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ExchangeTradedOption.class, new TypeSelector<com.finbourne.lusid.model.ExchangeTradedOption>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ExchangeTradedOption> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ExchangeTradedOption", com.finbourne.lusid.model.ExchangeTradedOption.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ExerciseEvent.class, new TypeSelector<com.finbourne.lusid.model.ExerciseEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ExerciseEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ExerciseEvent", com.finbourne.lusid.model.ExerciseEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ExoticInstrument.class, new TypeSelector<com.finbourne.lusid.model.ExoticInstrument>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ExoticInstrument> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ExoticInstrument", com.finbourne.lusid.model.ExoticInstrument.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ExpiryEvent.class, new TypeSelector<com.finbourne.lusid.model.ExpiryEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ExpiryEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ExpiryEvent", com.finbourne.lusid.model.ExpiryEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FilterPredicateComplianceParameter.class, new TypeSelector<com.finbourne.lusid.model.FilterPredicateComplianceParameter>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FilterPredicateComplianceParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FilterPredicateComplianceParameter", com.finbourne.lusid.model.FilterPredicateComplianceParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceParameterType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FilterStep.class, new TypeSelector<com.finbourne.lusid.model.FilterStep>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FilterStep> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FilterStep", com.finbourne.lusid.model.FilterStep.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceStepType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FilterStepRequest.class, new TypeSelector<com.finbourne.lusid.model.FilterStepRequest>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FilterStepRequest> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FilterStepRequest", com.finbourne.lusid.model.FilterStepRequest.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceStepTypeRequest"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FixedLeg.class, new TypeSelector<com.finbourne.lusid.model.FixedLeg>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FixedLeg> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FixedLeg", com.finbourne.lusid.model.FixedLeg.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FixedSchedule.class, new TypeSelector<com.finbourne.lusid.model.FixedSchedule>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FixedSchedule> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FixedSchedule", com.finbourne.lusid.model.FixedSchedule.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "scheduleType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FlexibleLoan.class, new TypeSelector<com.finbourne.lusid.model.FlexibleLoan>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FlexibleLoan> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FlexibleLoan", com.finbourne.lusid.model.FlexibleLoan.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FloatSchedule.class, new TypeSelector<com.finbourne.lusid.model.FloatSchedule>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FloatSchedule> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FloatSchedule", com.finbourne.lusid.model.FloatSchedule.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "scheduleType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FloatingLeg.class, new TypeSelector<com.finbourne.lusid.model.FloatingLeg>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FloatingLeg> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FloatingLeg", com.finbourne.lusid.model.FloatingLeg.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ForwardRateAgreement.class, new TypeSelector<com.finbourne.lusid.model.ForwardRateAgreement>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ForwardRateAgreement> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ForwardRateAgreement", com.finbourne.lusid.model.ForwardRateAgreement.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FundIdList.class, new TypeSelector<com.finbourne.lusid.model.FundIdList>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FundIdList> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FundIdList", com.finbourne.lusid.model.FundIdList.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "referenceListType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FundShareClass.class, new TypeSelector<com.finbourne.lusid.model.FundShareClass>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FundShareClass> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FundShareClass", com.finbourne.lusid.model.FundShareClass.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FundingLeg.class, new TypeSelector<com.finbourne.lusid.model.FundingLeg>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FundingLeg> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FundingLeg", com.finbourne.lusid.model.FundingLeg.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FundingLegOptions.class, new TypeSelector<com.finbourne.lusid.model.FundingLegOptions>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FundingLegOptions> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FundingLegOptions", com.finbourne.lusid.model.FundingLegOptions.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "modelOptionsType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.Future.class, new TypeSelector<com.finbourne.lusid.model.Future>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.Future> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("Future", com.finbourne.lusid.model.Future.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FutureExpiryEvent.class, new TypeSelector<com.finbourne.lusid.model.FutureExpiryEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FutureExpiryEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FutureExpiryEvent", com.finbourne.lusid.model.FutureExpiryEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FxDependency.class, new TypeSelector<com.finbourne.lusid.model.FxDependency>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FxDependency> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FxDependency", com.finbourne.lusid.model.FxDependency.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "dependencyType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FxForward.class, new TypeSelector<com.finbourne.lusid.model.FxForward>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FxForward> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FxForward", com.finbourne.lusid.model.FxForward.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FxForwardCurveByQuoteReference.class, new TypeSelector<com.finbourne.lusid.model.FxForwardCurveByQuoteReference>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FxForwardCurveByQuoteReference> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FxForwardCurveByQuoteReference", com.finbourne.lusid.model.FxForwardCurveByQuoteReference.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "marketDataType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FxForwardCurveData.class, new TypeSelector<com.finbourne.lusid.model.FxForwardCurveData>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FxForwardCurveData> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FxForwardCurveData", com.finbourne.lusid.model.FxForwardCurveData.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "marketDataType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FxForwardModelOptions.class, new TypeSelector<com.finbourne.lusid.model.FxForwardModelOptions>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FxForwardModelOptions> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FxForwardModelOptions", com.finbourne.lusid.model.FxForwardModelOptions.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "modelOptionsType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FxForwardPipsCurveData.class, new TypeSelector<com.finbourne.lusid.model.FxForwardPipsCurveData>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FxForwardPipsCurveData> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FxForwardPipsCurveData", com.finbourne.lusid.model.FxForwardPipsCurveData.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "marketDataType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FxForwardSettlementEvent.class, new TypeSelector<com.finbourne.lusid.model.FxForwardSettlementEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FxForwardSettlementEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FxForwardSettlementEvent", com.finbourne.lusid.model.FxForwardSettlementEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FxForwardTenorCurveData.class, new TypeSelector<com.finbourne.lusid.model.FxForwardTenorCurveData>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FxForwardTenorCurveData> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FxForwardTenorCurveData", com.finbourne.lusid.model.FxForwardTenorCurveData.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "marketDataType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FxForwardTenorPipsCurveData.class, new TypeSelector<com.finbourne.lusid.model.FxForwardTenorPipsCurveData>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FxForwardTenorPipsCurveData> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FxForwardTenorPipsCurveData", com.finbourne.lusid.model.FxForwardTenorPipsCurveData.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "marketDataType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FxForwardsDependency.class, new TypeSelector<com.finbourne.lusid.model.FxForwardsDependency>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FxForwardsDependency> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FxForwardsDependency", com.finbourne.lusid.model.FxForwardsDependency.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "dependencyType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FxLinkedNotionalSchedule.class, new TypeSelector<com.finbourne.lusid.model.FxLinkedNotionalSchedule>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FxLinkedNotionalSchedule> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FxLinkedNotionalSchedule", com.finbourne.lusid.model.FxLinkedNotionalSchedule.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "scheduleType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FxOption.class, new TypeSelector<com.finbourne.lusid.model.FxOption>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FxOption> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FxOption", com.finbourne.lusid.model.FxOption.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FxRateSchedule.class, new TypeSelector<com.finbourne.lusid.model.FxRateSchedule>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FxRateSchedule> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FxRateSchedule", com.finbourne.lusid.model.FxRateSchedule.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "scheduleType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FxSwap.class, new TypeSelector<com.finbourne.lusid.model.FxSwap>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FxSwap> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FxSwap", com.finbourne.lusid.model.FxSwap.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FxVolDependency.class, new TypeSelector<com.finbourne.lusid.model.FxVolDependency>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FxVolDependency> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FxVolDependency", com.finbourne.lusid.model.FxVolDependency.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "dependencyType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.FxVolSurfaceData.class, new TypeSelector<com.finbourne.lusid.model.FxVolSurfaceData>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.FxVolSurfaceData> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FxVolSurfaceData", com.finbourne.lusid.model.FxVolSurfaceData.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "marketDataType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.GroupBySelectorComplianceParameter.class, new TypeSelector<com.finbourne.lusid.model.GroupBySelectorComplianceParameter>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.GroupBySelectorComplianceParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("GroupBySelectorComplianceParameter", com.finbourne.lusid.model.GroupBySelectorComplianceParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceParameterType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.GroupByStep.class, new TypeSelector<com.finbourne.lusid.model.GroupByStep>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.GroupByStep> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("GroupByStep", com.finbourne.lusid.model.GroupByStep.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceStepType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.GroupByStepRequest.class, new TypeSelector<com.finbourne.lusid.model.GroupByStepRequest>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.GroupByStepRequest> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("GroupByStepRequest", com.finbourne.lusid.model.GroupByStepRequest.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceStepTypeRequest"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.GroupCalculationComplianceParameter.class, new TypeSelector<com.finbourne.lusid.model.GroupCalculationComplianceParameter>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.GroupCalculationComplianceParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("GroupCalculationComplianceParameter", com.finbourne.lusid.model.GroupCalculationComplianceParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceParameterType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.GroupFilterPredicateComplianceParameter.class, new TypeSelector<com.finbourne.lusid.model.GroupFilterPredicateComplianceParameter>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.GroupFilterPredicateComplianceParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("GroupFilterPredicateComplianceParameter", com.finbourne.lusid.model.GroupFilterPredicateComplianceParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceParameterType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.GroupFilterStep.class, new TypeSelector<com.finbourne.lusid.model.GroupFilterStep>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.GroupFilterStep> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("GroupFilterStep", com.finbourne.lusid.model.GroupFilterStep.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceStepType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.GroupFilterStepRequest.class, new TypeSelector<com.finbourne.lusid.model.GroupFilterStepRequest>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.GroupFilterStepRequest> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("GroupFilterStepRequest", com.finbourne.lusid.model.GroupFilterStepRequest.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceStepTypeRequest"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.IndexModelOptions.class, new TypeSelector<com.finbourne.lusid.model.IndexModelOptions>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.IndexModelOptions> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("IndexModelOptions", com.finbourne.lusid.model.IndexModelOptions.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "modelOptionsType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.IndexProjectionDependency.class, new TypeSelector<com.finbourne.lusid.model.IndexProjectionDependency>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.IndexProjectionDependency> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("IndexProjectionDependency", com.finbourne.lusid.model.IndexProjectionDependency.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "dependencyType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.InflationFixingDependency.class, new TypeSelector<com.finbourne.lusid.model.InflationFixingDependency>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.InflationFixingDependency> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("InflationFixingDependency", com.finbourne.lusid.model.InflationFixingDependency.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "dependencyType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.InflationLeg.class, new TypeSelector<com.finbourne.lusid.model.InflationLeg>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.InflationLeg> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("InflationLeg", com.finbourne.lusid.model.InflationLeg.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.InflationLinkedBond.class, new TypeSelector<com.finbourne.lusid.model.InflationLinkedBond>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.InflationLinkedBond> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("InflationLinkedBond", com.finbourne.lusid.model.InflationLinkedBond.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.InflationSwap.class, new TypeSelector<com.finbourne.lusid.model.InflationSwap>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.InflationSwap> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("InflationSwap", com.finbourne.lusid.model.InflationSwap.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.InformationalErrorEvent.class, new TypeSelector<com.finbourne.lusid.model.InformationalErrorEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.InformationalErrorEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("InformationalErrorEvent", com.finbourne.lusid.model.InformationalErrorEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.InformationalEvent.class, new TypeSelector<com.finbourne.lusid.model.InformationalEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.InformationalEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("InformationalEvent", com.finbourne.lusid.model.InformationalEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.InstrumentEvent.class, new TypeSelector<com.finbourne.lusid.model.InstrumentEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.InstrumentEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AccumulationEvent", com.finbourne.lusid.model.AccumulationEvent.class);
                        classByDiscriminatorValue.put("AmortisationEvent", com.finbourne.lusid.model.AmortisationEvent.class);
                        classByDiscriminatorValue.put("BondCouponEvent", com.finbourne.lusid.model.BondCouponEvent.class);
                        classByDiscriminatorValue.put("BondDefaultEvent", com.finbourne.lusid.model.BondDefaultEvent.class);
                        classByDiscriminatorValue.put("BondPrincipalEvent", com.finbourne.lusid.model.BondPrincipalEvent.class);
                        classByDiscriminatorValue.put("BonusIssueEvent", com.finbourne.lusid.model.BonusIssueEvent.class);
                        classByDiscriminatorValue.put("CallOnIntermediateSecuritiesEvent", com.finbourne.lusid.model.CallOnIntermediateSecuritiesEvent.class);
                        classByDiscriminatorValue.put("CapitalDistributionEvent", com.finbourne.lusid.model.CapitalDistributionEvent.class);
                        classByDiscriminatorValue.put("CashDividendEvent", com.finbourne.lusid.model.CashDividendEvent.class);
                        classByDiscriminatorValue.put("CashFlowEvent", com.finbourne.lusid.model.CashFlowEvent.class);
                        classByDiscriminatorValue.put("CdsCreditEvent", com.finbourne.lusid.model.CdsCreditEvent.class);
                        classByDiscriminatorValue.put("CdxCreditEvent", com.finbourne.lusid.model.CdxCreditEvent.class);
                        classByDiscriminatorValue.put("CloseEvent", com.finbourne.lusid.model.CloseEvent.class);
                        classByDiscriminatorValue.put("CreditPremiumCashFlowEvent", com.finbourne.lusid.model.CreditPremiumCashFlowEvent.class);
                        classByDiscriminatorValue.put("DividendOptionEvent", com.finbourne.lusid.model.DividendOptionEvent.class);
                        classByDiscriminatorValue.put("DividendReinvestmentEvent", com.finbourne.lusid.model.DividendReinvestmentEvent.class);
                        classByDiscriminatorValue.put("ExerciseEvent", com.finbourne.lusid.model.ExerciseEvent.class);
                        classByDiscriminatorValue.put("ExpiryEvent", com.finbourne.lusid.model.ExpiryEvent.class);
                        classByDiscriminatorValue.put("FutureExpiryEvent", com.finbourne.lusid.model.FutureExpiryEvent.class);
                        classByDiscriminatorValue.put("FxForwardSettlementEvent", com.finbourne.lusid.model.FxForwardSettlementEvent.class);
                        classByDiscriminatorValue.put("InformationalErrorEvent", com.finbourne.lusid.model.InformationalErrorEvent.class);
                        classByDiscriminatorValue.put("InformationalEvent", com.finbourne.lusid.model.InformationalEvent.class);
                        classByDiscriminatorValue.put("IntermediateSecuritiesDistributionEvent", com.finbourne.lusid.model.IntermediateSecuritiesDistributionEvent.class);
                        classByDiscriminatorValue.put("MaturityEvent", com.finbourne.lusid.model.MaturityEvent.class);
                        classByDiscriminatorValue.put("MbsCouponEvent", com.finbourne.lusid.model.MbsCouponEvent.class);
                        classByDiscriminatorValue.put("MbsInterestDeferralEvent", com.finbourne.lusid.model.MbsInterestDeferralEvent.class);
                        classByDiscriminatorValue.put("MbsInterestShortfallEvent", com.finbourne.lusid.model.MbsInterestShortfallEvent.class);
                        classByDiscriminatorValue.put("MbsPrincipalEvent", com.finbourne.lusid.model.MbsPrincipalEvent.class);
                        classByDiscriminatorValue.put("MbsPrincipalWriteOffEvent", com.finbourne.lusid.model.MbsPrincipalWriteOffEvent.class);
                        classByDiscriminatorValue.put("MergerEvent", com.finbourne.lusid.model.MergerEvent.class);
                        classByDiscriminatorValue.put("OpenEvent", com.finbourne.lusid.model.OpenEvent.class);
                        classByDiscriminatorValue.put("OptionExerciseCashEvent", com.finbourne.lusid.model.OptionExerciseCashEvent.class);
                        classByDiscriminatorValue.put("OptionExercisePhysicalEvent", com.finbourne.lusid.model.OptionExercisePhysicalEvent.class);
                        classByDiscriminatorValue.put("ProtectionPayoutCashFlowEvent", com.finbourne.lusid.model.ProtectionPayoutCashFlowEvent.class);
                        classByDiscriminatorValue.put("RawVendorEvent", com.finbourne.lusid.model.RawVendorEvent.class);
                        classByDiscriminatorValue.put("ResetEvent", com.finbourne.lusid.model.ResetEvent.class);
                        classByDiscriminatorValue.put("ReverseStockSplitEvent", com.finbourne.lusid.model.ReverseStockSplitEvent.class);
                        classByDiscriminatorValue.put("ScripDividendEvent", com.finbourne.lusid.model.ScripDividendEvent.class);
                        classByDiscriminatorValue.put("SpinOffEvent", com.finbourne.lusid.model.SpinOffEvent.class);
                        classByDiscriminatorValue.put("StockDividendEvent", com.finbourne.lusid.model.StockDividendEvent.class);
                        classByDiscriminatorValue.put("StockSplitEvent", com.finbourne.lusid.model.StockSplitEvent.class);
                        classByDiscriminatorValue.put("SwapCashFlowEvent", com.finbourne.lusid.model.SwapCashFlowEvent.class);
                        classByDiscriminatorValue.put("SwapPrincipalEvent", com.finbourne.lusid.model.SwapPrincipalEvent.class);
                        classByDiscriminatorValue.put("TenderEvent", com.finbourne.lusid.model.TenderEvent.class);
                        classByDiscriminatorValue.put("TermDepositInterestEvent", com.finbourne.lusid.model.TermDepositInterestEvent.class);
                        classByDiscriminatorValue.put("TermDepositPrincipalEvent", com.finbourne.lusid.model.TermDepositPrincipalEvent.class);
                        classByDiscriminatorValue.put("TransitionEvent", com.finbourne.lusid.model.TransitionEvent.class);
                        classByDiscriminatorValue.put("TriggerEvent", com.finbourne.lusid.model.TriggerEvent.class);
                        classByDiscriminatorValue.put("InstrumentEvent", com.finbourne.lusid.model.InstrumentEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.InstrumentLeg.class, new TypeSelector<com.finbourne.lusid.model.InstrumentLeg>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.InstrumentLeg> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("FixedLeg", com.finbourne.lusid.model.FixedLeg.class);
                        classByDiscriminatorValue.put("FloatingLeg", com.finbourne.lusid.model.FloatingLeg.class);
                        classByDiscriminatorValue.put("FundingLeg", com.finbourne.lusid.model.FundingLeg.class);
                        classByDiscriminatorValue.put("InstrumentLeg", com.finbourne.lusid.model.InstrumentLeg.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.InstrumentList.class, new TypeSelector<com.finbourne.lusid.model.InstrumentList>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.InstrumentList> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("InstrumentList", com.finbourne.lusid.model.InstrumentList.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "referenceListType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.InstrumentListComplianceParameter.class, new TypeSelector<com.finbourne.lusid.model.InstrumentListComplianceParameter>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.InstrumentListComplianceParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("InstrumentListComplianceParameter", com.finbourne.lusid.model.InstrumentListComplianceParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceParameterType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.InterestRateSwap.class, new TypeSelector<com.finbourne.lusid.model.InterestRateSwap>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.InterestRateSwap> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("InterestRateSwap", com.finbourne.lusid.model.InterestRateSwap.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.InterestRateSwaption.class, new TypeSelector<com.finbourne.lusid.model.InterestRateSwaption>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.InterestRateSwaption> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("InterestRateSwaption", com.finbourne.lusid.model.InterestRateSwaption.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.IntermediateComplianceStep.class, new TypeSelector<com.finbourne.lusid.model.IntermediateComplianceStep>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.IntermediateComplianceStep> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("IntermediateComplianceStep", com.finbourne.lusid.model.IntermediateComplianceStep.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceStepType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.IntermediateComplianceStepRequest.class, new TypeSelector<com.finbourne.lusid.model.IntermediateComplianceStepRequest>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.IntermediateComplianceStepRequest> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("IntermediateComplianceStepRequest", com.finbourne.lusid.model.IntermediateComplianceStepRequest.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceStepTypeRequest"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.IntermediateSecuritiesDistributionEvent.class, new TypeSelector<com.finbourne.lusid.model.IntermediateSecuritiesDistributionEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.IntermediateSecuritiesDistributionEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("IntermediateSecuritiesDistributionEvent", com.finbourne.lusid.model.IntermediateSecuritiesDistributionEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.IrVolCubeData.class, new TypeSelector<com.finbourne.lusid.model.IrVolCubeData>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.IrVolCubeData> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("IrVolCubeData", com.finbourne.lusid.model.IrVolCubeData.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "marketDataType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.IrVolDependency.class, new TypeSelector<com.finbourne.lusid.model.IrVolDependency>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.IrVolDependency> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("IrVolDependency", com.finbourne.lusid.model.IrVolDependency.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "dependencyType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.LifeCycleEventValue.class, new TypeSelector<com.finbourne.lusid.model.LifeCycleEventValue>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.LifeCycleEventValue> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("LifeCycleEventValue", com.finbourne.lusid.model.LifeCycleEventValue.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "resultValueType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.LoanFacility.class, new TypeSelector<com.finbourne.lusid.model.LoanFacility>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.LoanFacility> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("LoanFacility", com.finbourne.lusid.model.LoanFacility.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.LusidInstrument.class, new TypeSelector<com.finbourne.lusid.model.LusidInstrument>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.LusidInstrument> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("Basket", com.finbourne.lusid.model.Basket.class);
                        classByDiscriminatorValue.put("Bond", com.finbourne.lusid.model.Bond.class);
                        classByDiscriminatorValue.put("CapFloor", com.finbourne.lusid.model.CapFloor.class);
                        classByDiscriminatorValue.put("Cash", com.finbourne.lusid.model.Cash.class);
                        classByDiscriminatorValue.put("CashPerpetual", com.finbourne.lusid.model.CashPerpetual.class);
                        classByDiscriminatorValue.put("CdsIndex", com.finbourne.lusid.model.CdsIndex.class);
                        classByDiscriminatorValue.put("ComplexBond", com.finbourne.lusid.model.ComplexBond.class);
                        classByDiscriminatorValue.put("ContractForDifference", com.finbourne.lusid.model.ContractForDifference.class);
                        classByDiscriminatorValue.put("CreditDefaultSwap", com.finbourne.lusid.model.CreditDefaultSwap.class);
                        classByDiscriminatorValue.put("Equity", com.finbourne.lusid.model.Equity.class);
                        classByDiscriminatorValue.put("EquityOption", com.finbourne.lusid.model.EquityOption.class);
                        classByDiscriminatorValue.put("EquitySwap", com.finbourne.lusid.model.EquitySwap.class);
                        classByDiscriminatorValue.put("ExchangeTradedOption", com.finbourne.lusid.model.ExchangeTradedOption.class);
                        classByDiscriminatorValue.put("ExoticInstrument", com.finbourne.lusid.model.ExoticInstrument.class);
                        classByDiscriminatorValue.put("FixedLeg", com.finbourne.lusid.model.FixedLeg.class);
                        classByDiscriminatorValue.put("FlexibleLoan", com.finbourne.lusid.model.FlexibleLoan.class);
                        classByDiscriminatorValue.put("FloatingLeg", com.finbourne.lusid.model.FloatingLeg.class);
                        classByDiscriminatorValue.put("ForwardRateAgreement", com.finbourne.lusid.model.ForwardRateAgreement.class);
                        classByDiscriminatorValue.put("FundShareClass", com.finbourne.lusid.model.FundShareClass.class);
                        classByDiscriminatorValue.put("FundingLeg", com.finbourne.lusid.model.FundingLeg.class);
                        classByDiscriminatorValue.put("Future", com.finbourne.lusid.model.Future.class);
                        classByDiscriminatorValue.put("FxForward", com.finbourne.lusid.model.FxForward.class);
                        classByDiscriminatorValue.put("FxOption", com.finbourne.lusid.model.FxOption.class);
                        classByDiscriminatorValue.put("FxSwap", com.finbourne.lusid.model.FxSwap.class);
                        classByDiscriminatorValue.put("InflationLeg", com.finbourne.lusid.model.InflationLeg.class);
                        classByDiscriminatorValue.put("InflationLinkedBond", com.finbourne.lusid.model.InflationLinkedBond.class);
                        classByDiscriminatorValue.put("InflationSwap", com.finbourne.lusid.model.InflationSwap.class);
                        classByDiscriminatorValue.put("InstrumentLeg", com.finbourne.lusid.model.InstrumentLeg.class);
                        classByDiscriminatorValue.put("InterestRateSwap", com.finbourne.lusid.model.InterestRateSwap.class);
                        classByDiscriminatorValue.put("InterestRateSwaption", com.finbourne.lusid.model.InterestRateSwaption.class);
                        classByDiscriminatorValue.put("LoanFacility", com.finbourne.lusid.model.LoanFacility.class);
                        classByDiscriminatorValue.put("MasteredInstrument", com.finbourne.lusid.model.MasteredInstrument.class);
                        classByDiscriminatorValue.put("ReferenceInstrument", com.finbourne.lusid.model.ReferenceInstrument.class);
                        classByDiscriminatorValue.put("Repo", com.finbourne.lusid.model.Repo.class);
                        classByDiscriminatorValue.put("SimpleCashFlowLoan", com.finbourne.lusid.model.SimpleCashFlowLoan.class);
                        classByDiscriminatorValue.put("SimpleInstrument", com.finbourne.lusid.model.SimpleInstrument.class);
                        classByDiscriminatorValue.put("TermDeposit", com.finbourne.lusid.model.TermDeposit.class);
                        classByDiscriminatorValue.put("TotalReturnSwap", com.finbourne.lusid.model.TotalReturnSwap.class);
                        classByDiscriminatorValue.put("LusidInstrument", com.finbourne.lusid.model.LusidInstrument.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.MarketDataOptions.class, new TypeSelector<com.finbourne.lusid.model.MarketDataOptions>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.MarketDataOptions> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CurveOptions", com.finbourne.lusid.model.CurveOptions.class);
                        classByDiscriminatorValue.put("MarketDataOptions", com.finbourne.lusid.model.MarketDataOptions.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "marketDataOptionsType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.MasteredInstrument.class, new TypeSelector<com.finbourne.lusid.model.MasteredInstrument>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.MasteredInstrument> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("MasteredInstrument", com.finbourne.lusid.model.MasteredInstrument.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.MatchCriterion.class, new TypeSelector<com.finbourne.lusid.model.MatchCriterion>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.MatchCriterion> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PropertyValueEquals", com.finbourne.lusid.model.PropertyValueEquals.class);
                        classByDiscriminatorValue.put("PropertyValueIn", com.finbourne.lusid.model.PropertyValueIn.class);
                        classByDiscriminatorValue.put("SubHoldingKeyValueEquals", com.finbourne.lusid.model.SubHoldingKeyValueEquals.class);
                        classByDiscriminatorValue.put("MatchCriterion", com.finbourne.lusid.model.MatchCriterion.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "criterionType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.MaturityEvent.class, new TypeSelector<com.finbourne.lusid.model.MaturityEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.MaturityEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("MaturityEvent", com.finbourne.lusid.model.MaturityEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.MbsCouponEvent.class, new TypeSelector<com.finbourne.lusid.model.MbsCouponEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.MbsCouponEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("MbsCouponEvent", com.finbourne.lusid.model.MbsCouponEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.MbsInterestDeferralEvent.class, new TypeSelector<com.finbourne.lusid.model.MbsInterestDeferralEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.MbsInterestDeferralEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("MbsInterestDeferralEvent", com.finbourne.lusid.model.MbsInterestDeferralEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.MbsInterestShortfallEvent.class, new TypeSelector<com.finbourne.lusid.model.MbsInterestShortfallEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.MbsInterestShortfallEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("MbsInterestShortfallEvent", com.finbourne.lusid.model.MbsInterestShortfallEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.MbsPrincipalEvent.class, new TypeSelector<com.finbourne.lusid.model.MbsPrincipalEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.MbsPrincipalEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("MbsPrincipalEvent", com.finbourne.lusid.model.MbsPrincipalEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.MbsPrincipalWriteOffEvent.class, new TypeSelector<com.finbourne.lusid.model.MbsPrincipalWriteOffEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.MbsPrincipalWriteOffEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("MbsPrincipalWriteOffEvent", com.finbourne.lusid.model.MbsPrincipalWriteOffEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.MergerEvent.class, new TypeSelector<com.finbourne.lusid.model.MergerEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.MergerEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("MergerEvent", com.finbourne.lusid.model.MergerEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ModelOptions.class, new TypeSelector<com.finbourne.lusid.model.ModelOptions>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ModelOptions> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("EmptyModelOptions", com.finbourne.lusid.model.EmptyModelOptions.class);
                        classByDiscriminatorValue.put("EquityModelOptions", com.finbourne.lusid.model.EquityModelOptions.class);
                        classByDiscriminatorValue.put("FundingLegOptions", com.finbourne.lusid.model.FundingLegOptions.class);
                        classByDiscriminatorValue.put("FxForwardModelOptions", com.finbourne.lusid.model.FxForwardModelOptions.class);
                        classByDiscriminatorValue.put("IndexModelOptions", com.finbourne.lusid.model.IndexModelOptions.class);
                        classByDiscriminatorValue.put("OpaqueModelOptions", com.finbourne.lusid.model.OpaqueModelOptions.class);
                        classByDiscriminatorValue.put("ModelOptions", com.finbourne.lusid.model.ModelOptions.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "modelOptionsType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.OpaqueDependency.class, new TypeSelector<com.finbourne.lusid.model.OpaqueDependency>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.OpaqueDependency> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OpaqueDependency", com.finbourne.lusid.model.OpaqueDependency.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "dependencyType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.OpaqueMarketData.class, new TypeSelector<com.finbourne.lusid.model.OpaqueMarketData>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.OpaqueMarketData> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OpaqueMarketData", com.finbourne.lusid.model.OpaqueMarketData.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "marketDataType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.OpaqueModelOptions.class, new TypeSelector<com.finbourne.lusid.model.OpaqueModelOptions>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.OpaqueModelOptions> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OpaqueModelOptions", com.finbourne.lusid.model.OpaqueModelOptions.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "modelOptionsType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.OpenEvent.class, new TypeSelector<com.finbourne.lusid.model.OpenEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.OpenEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OpenEvent", com.finbourne.lusid.model.OpenEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.OptionExerciseCashEvent.class, new TypeSelector<com.finbourne.lusid.model.OptionExerciseCashEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.OptionExerciseCashEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OptionExerciseCashEvent", com.finbourne.lusid.model.OptionExerciseCashEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.OptionExercisePhysicalEvent.class, new TypeSelector<com.finbourne.lusid.model.OptionExercisePhysicalEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.OptionExercisePhysicalEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OptionExercisePhysicalEvent", com.finbourne.lusid.model.OptionExercisePhysicalEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.OptionalitySchedule.class, new TypeSelector<com.finbourne.lusid.model.OptionalitySchedule>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.OptionalitySchedule> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("OptionalitySchedule", com.finbourne.lusid.model.OptionalitySchedule.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "scheduleType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.PercentCheckStep.class, new TypeSelector<com.finbourne.lusid.model.PercentCheckStep>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.PercentCheckStep> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PercentCheckStep", com.finbourne.lusid.model.PercentCheckStep.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceStepType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.PercentCheckStepRequest.class, new TypeSelector<com.finbourne.lusid.model.PercentCheckStepRequest>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.PercentCheckStepRequest> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PercentCheckStepRequest", com.finbourne.lusid.model.PercentCheckStepRequest.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceStepTypeRequest"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.PortfolioGroupIdComplianceParameter.class, new TypeSelector<com.finbourne.lusid.model.PortfolioGroupIdComplianceParameter>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.PortfolioGroupIdComplianceParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PortfolioGroupIdComplianceParameter", com.finbourne.lusid.model.PortfolioGroupIdComplianceParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceParameterType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.PortfolioGroupIdList.class, new TypeSelector<com.finbourne.lusid.model.PortfolioGroupIdList>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.PortfolioGroupIdList> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PortfolioGroupIdList", com.finbourne.lusid.model.PortfolioGroupIdList.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "referenceListType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.PortfolioGroupIdListComplianceParameter.class, new TypeSelector<com.finbourne.lusid.model.PortfolioGroupIdListComplianceParameter>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.PortfolioGroupIdListComplianceParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PortfolioGroupIdListComplianceParameter", com.finbourne.lusid.model.PortfolioGroupIdListComplianceParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceParameterType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.PortfolioIdComplianceParameter.class, new TypeSelector<com.finbourne.lusid.model.PortfolioIdComplianceParameter>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.PortfolioIdComplianceParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PortfolioIdComplianceParameter", com.finbourne.lusid.model.PortfolioIdComplianceParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceParameterType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.PortfolioIdList.class, new TypeSelector<com.finbourne.lusid.model.PortfolioIdList>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.PortfolioIdList> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PortfolioIdList", com.finbourne.lusid.model.PortfolioIdList.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "referenceListType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.PortfolioIdListComplianceParameter.class, new TypeSelector<com.finbourne.lusid.model.PortfolioIdListComplianceParameter>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.PortfolioIdListComplianceParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PortfolioIdListComplianceParameter", com.finbourne.lusid.model.PortfolioIdListComplianceParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceParameterType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.PortfolioResultDataKeyRule.class, new TypeSelector<com.finbourne.lusid.model.PortfolioResultDataKeyRule>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.PortfolioResultDataKeyRule> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PortfolioResultDataKeyRule", com.finbourne.lusid.model.PortfolioResultDataKeyRule.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "resultKeyRuleType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.PropertyKeyComplianceParameter.class, new TypeSelector<com.finbourne.lusid.model.PropertyKeyComplianceParameter>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.PropertyKeyComplianceParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PropertyKeyComplianceParameter", com.finbourne.lusid.model.PropertyKeyComplianceParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceParameterType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.PropertyKeyListComplianceParameter.class, new TypeSelector<com.finbourne.lusid.model.PropertyKeyListComplianceParameter>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.PropertyKeyListComplianceParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PropertyKeyListComplianceParameter", com.finbourne.lusid.model.PropertyKeyListComplianceParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceParameterType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.PropertyList.class, new TypeSelector<com.finbourne.lusid.model.PropertyList>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.PropertyList> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PropertyList", com.finbourne.lusid.model.PropertyList.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "referenceListType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.PropertyListComplianceParameter.class, new TypeSelector<com.finbourne.lusid.model.PropertyListComplianceParameter>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.PropertyListComplianceParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PropertyListComplianceParameter", com.finbourne.lusid.model.PropertyListComplianceParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceParameterType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.PropertyValueEquals.class, new TypeSelector<com.finbourne.lusid.model.PropertyValueEquals>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.PropertyValueEquals> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PropertyValueEquals", com.finbourne.lusid.model.PropertyValueEquals.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "criterionType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.PropertyValueIn.class, new TypeSelector<com.finbourne.lusid.model.PropertyValueIn>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.PropertyValueIn> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PropertyValueIn", com.finbourne.lusid.model.PropertyValueIn.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "criterionType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ProtectionPayoutCashFlowEvent.class, new TypeSelector<com.finbourne.lusid.model.ProtectionPayoutCashFlowEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ProtectionPayoutCashFlowEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ProtectionPayoutCashFlowEvent", com.finbourne.lusid.model.ProtectionPayoutCashFlowEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.QuoteDependency.class, new TypeSelector<com.finbourne.lusid.model.QuoteDependency>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.QuoteDependency> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("QuoteDependency", com.finbourne.lusid.model.QuoteDependency.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "dependencyType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.RawVendorEvent.class, new TypeSelector<com.finbourne.lusid.model.RawVendorEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.RawVendorEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("RawVendorEvent", com.finbourne.lusid.model.RawVendorEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.RecombineStep.class, new TypeSelector<com.finbourne.lusid.model.RecombineStep>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.RecombineStep> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("RecombineStep", com.finbourne.lusid.model.RecombineStep.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceStepType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ReconcileDateTimeRule.class, new TypeSelector<com.finbourne.lusid.model.ReconcileDateTimeRule>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ReconcileDateTimeRule> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ReconcileDateTimeRule", com.finbourne.lusid.model.ReconcileDateTimeRule.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ruleType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ReconcileNumericRule.class, new TypeSelector<com.finbourne.lusid.model.ReconcileNumericRule>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ReconcileNumericRule> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ReconcileNumericRule", com.finbourne.lusid.model.ReconcileNumericRule.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ruleType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ReconcileStringRule.class, new TypeSelector<com.finbourne.lusid.model.ReconcileStringRule>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ReconcileStringRule> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ReconcileStringRule", com.finbourne.lusid.model.ReconcileStringRule.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ruleType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ReconciliationRule.class, new TypeSelector<com.finbourne.lusid.model.ReconciliationRule>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ReconciliationRule> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ReconcileDateTimeRule", com.finbourne.lusid.model.ReconcileDateTimeRule.class);
                        classByDiscriminatorValue.put("ReconcileNumericRule", com.finbourne.lusid.model.ReconcileNumericRule.class);
                        classByDiscriminatorValue.put("ReconcileStringRule", com.finbourne.lusid.model.ReconcileStringRule.class);
                        classByDiscriminatorValue.put("ReconciliationRule", com.finbourne.lusid.model.ReconciliationRule.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "ruleType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ReferenceInstrument.class, new TypeSelector<com.finbourne.lusid.model.ReferenceInstrument>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ReferenceInstrument> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ReferenceInstrument", com.finbourne.lusid.model.ReferenceInstrument.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ReferenceList.class, new TypeSelector<com.finbourne.lusid.model.ReferenceList>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ReferenceList> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("AddressKeyList", com.finbourne.lusid.model.AddressKeyList.class);
                        classByDiscriminatorValue.put("DecimalList", com.finbourne.lusid.model.DecimalList.class);
                        classByDiscriminatorValue.put("FundIdList", com.finbourne.lusid.model.FundIdList.class);
                        classByDiscriminatorValue.put("InstrumentList", com.finbourne.lusid.model.InstrumentList.class);
                        classByDiscriminatorValue.put("PortfolioGroupIdList", com.finbourne.lusid.model.PortfolioGroupIdList.class);
                        classByDiscriminatorValue.put("PortfolioIdList", com.finbourne.lusid.model.PortfolioIdList.class);
                        classByDiscriminatorValue.put("PropertyList", com.finbourne.lusid.model.PropertyList.class);
                        classByDiscriminatorValue.put("StringList", com.finbourne.lusid.model.StringList.class);
                        classByDiscriminatorValue.put("ReferenceList", com.finbourne.lusid.model.ReferenceList.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "referenceListType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.Repo.class, new TypeSelector<com.finbourne.lusid.model.Repo>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.Repo> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("Repo", com.finbourne.lusid.model.Repo.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ResetEvent.class, new TypeSelector<com.finbourne.lusid.model.ResetEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ResetEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ResetEvent", com.finbourne.lusid.model.ResetEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ResultDataKeyRule.class, new TypeSelector<com.finbourne.lusid.model.ResultDataKeyRule>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ResultDataKeyRule> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ResultDataKeyRule", com.finbourne.lusid.model.ResultDataKeyRule.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "resultKeyRuleType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ResultKeyRule.class, new TypeSelector<com.finbourne.lusid.model.ResultKeyRule>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ResultKeyRule> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("PortfolioResultDataKeyRule", com.finbourne.lusid.model.PortfolioResultDataKeyRule.class);
                        classByDiscriminatorValue.put("ResultDataKeyRule", com.finbourne.lusid.model.ResultDataKeyRule.class);
                        classByDiscriminatorValue.put("ResultKeyRule", com.finbourne.lusid.model.ResultKeyRule.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "resultKeyRuleType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ResultValue.class, new TypeSelector<com.finbourne.lusid.model.ResultValue>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ResultValue> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("CashFlowValue", com.finbourne.lusid.model.CashFlowValue.class);
                        classByDiscriminatorValue.put("CashFlowValueSet", com.finbourne.lusid.model.CashFlowValueSet.class);
                        classByDiscriminatorValue.put("LifeCycleEventValue", com.finbourne.lusid.model.LifeCycleEventValue.class);
                        classByDiscriminatorValue.put("ResultValue0D", com.finbourne.lusid.model.ResultValue0D.class);
                        classByDiscriminatorValue.put("ResultValueBool", com.finbourne.lusid.model.ResultValueBool.class);
                        classByDiscriminatorValue.put("ResultValueCurrency", com.finbourne.lusid.model.ResultValueCurrency.class);
                        classByDiscriminatorValue.put("ResultValueDateTimeOffset", com.finbourne.lusid.model.ResultValueDateTimeOffset.class);
                        classByDiscriminatorValue.put("ResultValueDecimal", com.finbourne.lusid.model.ResultValueDecimal.class);
                        classByDiscriminatorValue.put("ResultValueDictionary", com.finbourne.lusid.model.ResultValueDictionary.class);
                        classByDiscriminatorValue.put("ResultValueInt", com.finbourne.lusid.model.ResultValueInt.class);
                        classByDiscriminatorValue.put("ResultValueString", com.finbourne.lusid.model.ResultValueString.class);
                        classByDiscriminatorValue.put("ResultValue", com.finbourne.lusid.model.ResultValue.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "resultValueType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ResultValue0D.class, new TypeSelector<com.finbourne.lusid.model.ResultValue0D>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ResultValue0D> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ResultValue0D", com.finbourne.lusid.model.ResultValue0D.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "resultValueType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ResultValueBool.class, new TypeSelector<com.finbourne.lusid.model.ResultValueBool>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ResultValueBool> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ResultValueBool", com.finbourne.lusid.model.ResultValueBool.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "resultValueType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ResultValueCurrency.class, new TypeSelector<com.finbourne.lusid.model.ResultValueCurrency>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ResultValueCurrency> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ResultValueCurrency", com.finbourne.lusid.model.ResultValueCurrency.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "resultValueType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ResultValueDateTimeOffset.class, new TypeSelector<com.finbourne.lusid.model.ResultValueDateTimeOffset>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ResultValueDateTimeOffset> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ResultValueDateTimeOffset", com.finbourne.lusid.model.ResultValueDateTimeOffset.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "resultValueType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ResultValueDecimal.class, new TypeSelector<com.finbourne.lusid.model.ResultValueDecimal>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ResultValueDecimal> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ResultValueDecimal", com.finbourne.lusid.model.ResultValueDecimal.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "resultValueType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ResultValueDictionary.class, new TypeSelector<com.finbourne.lusid.model.ResultValueDictionary>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ResultValueDictionary> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ResultValueDictionary", com.finbourne.lusid.model.ResultValueDictionary.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "resultValueType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ResultValueInt.class, new TypeSelector<com.finbourne.lusid.model.ResultValueInt>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ResultValueInt> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ResultValueInt", com.finbourne.lusid.model.ResultValueInt.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "resultValueType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ResultValueString.class, new TypeSelector<com.finbourne.lusid.model.ResultValueString>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ResultValueString> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ResultValueString", com.finbourne.lusid.model.ResultValueString.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "resultValueType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ReverseStockSplitEvent.class, new TypeSelector<com.finbourne.lusid.model.ReverseStockSplitEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ReverseStockSplitEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ReverseStockSplitEvent", com.finbourne.lusid.model.ReverseStockSplitEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.Schedule.class, new TypeSelector<com.finbourne.lusid.model.Schedule>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.Schedule> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("BondConversionSchedule", com.finbourne.lusid.model.BondConversionSchedule.class);
                        classByDiscriminatorValue.put("FixedSchedule", com.finbourne.lusid.model.FixedSchedule.class);
                        classByDiscriminatorValue.put("FloatSchedule", com.finbourne.lusid.model.FloatSchedule.class);
                        classByDiscriminatorValue.put("FxLinkedNotionalSchedule", com.finbourne.lusid.model.FxLinkedNotionalSchedule.class);
                        classByDiscriminatorValue.put("FxRateSchedule", com.finbourne.lusid.model.FxRateSchedule.class);
                        classByDiscriminatorValue.put("OptionalitySchedule", com.finbourne.lusid.model.OptionalitySchedule.class);
                        classByDiscriminatorValue.put("StepSchedule", com.finbourne.lusid.model.StepSchedule.class);
                        classByDiscriminatorValue.put("Schedule", com.finbourne.lusid.model.Schedule.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "scheduleType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.ScripDividendEvent.class, new TypeSelector<com.finbourne.lusid.model.ScripDividendEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.ScripDividendEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("ScripDividendEvent", com.finbourne.lusid.model.ScripDividendEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.SimpleCashFlowLoan.class, new TypeSelector<com.finbourne.lusid.model.SimpleCashFlowLoan>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.SimpleCashFlowLoan> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("SimpleCashFlowLoan", com.finbourne.lusid.model.SimpleCashFlowLoan.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.SimpleInstrument.class, new TypeSelector<com.finbourne.lusid.model.SimpleInstrument>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.SimpleInstrument> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("SimpleInstrument", com.finbourne.lusid.model.SimpleInstrument.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.SpinOffEvent.class, new TypeSelector<com.finbourne.lusid.model.SpinOffEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.SpinOffEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("SpinOffEvent", com.finbourne.lusid.model.SpinOffEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.StepSchedule.class, new TypeSelector<com.finbourne.lusid.model.StepSchedule>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.StepSchedule> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StepSchedule", com.finbourne.lusid.model.StepSchedule.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "scheduleType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.StockDividendEvent.class, new TypeSelector<com.finbourne.lusid.model.StockDividendEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.StockDividendEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StockDividendEvent", com.finbourne.lusid.model.StockDividendEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.StockSplitEvent.class, new TypeSelector<com.finbourne.lusid.model.StockSplitEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.StockSplitEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StockSplitEvent", com.finbourne.lusid.model.StockSplitEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.StringComplianceParameter.class, new TypeSelector<com.finbourne.lusid.model.StringComplianceParameter>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.StringComplianceParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StringComplianceParameter", com.finbourne.lusid.model.StringComplianceParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceParameterType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.StringList.class, new TypeSelector<com.finbourne.lusid.model.StringList>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.StringList> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StringList", com.finbourne.lusid.model.StringList.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "referenceListType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.StringListComplianceParameter.class, new TypeSelector<com.finbourne.lusid.model.StringListComplianceParameter>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.StringListComplianceParameter> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("StringListComplianceParameter", com.finbourne.lusid.model.StringListComplianceParameter.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "complianceParameterType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.SubHoldingKeyValueEquals.class, new TypeSelector<com.finbourne.lusid.model.SubHoldingKeyValueEquals>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.SubHoldingKeyValueEquals> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("SubHoldingKeyValueEquals", com.finbourne.lusid.model.SubHoldingKeyValueEquals.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "criterionType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.SwapCashFlowEvent.class, new TypeSelector<com.finbourne.lusid.model.SwapCashFlowEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.SwapCashFlowEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("SwapCashFlowEvent", com.finbourne.lusid.model.SwapCashFlowEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.SwapPrincipalEvent.class, new TypeSelector<com.finbourne.lusid.model.SwapPrincipalEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.SwapPrincipalEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("SwapPrincipalEvent", com.finbourne.lusid.model.SwapPrincipalEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.TenderEvent.class, new TypeSelector<com.finbourne.lusid.model.TenderEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.TenderEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("TenderEvent", com.finbourne.lusid.model.TenderEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.TermDeposit.class, new TypeSelector<com.finbourne.lusid.model.TermDeposit>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.TermDeposit> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("TermDeposit", com.finbourne.lusid.model.TermDeposit.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.TermDepositInterestEvent.class, new TypeSelector<com.finbourne.lusid.model.TermDepositInterestEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.TermDepositInterestEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("TermDepositInterestEvent", com.finbourne.lusid.model.TermDepositInterestEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.TermDepositPrincipalEvent.class, new TypeSelector<com.finbourne.lusid.model.TermDepositPrincipalEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.TermDepositPrincipalEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("TermDepositPrincipalEvent", com.finbourne.lusid.model.TermDepositPrincipalEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.TotalReturnSwap.class, new TypeSelector<com.finbourne.lusid.model.TotalReturnSwap>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.TotalReturnSwap> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("TotalReturnSwap", com.finbourne.lusid.model.TotalReturnSwap.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.TransitionEvent.class, new TypeSelector<com.finbourne.lusid.model.TransitionEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.TransitionEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("TransitionEvent", com.finbourne.lusid.model.TransitionEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.TriggerEvent.class, new TypeSelector<com.finbourne.lusid.model.TriggerEvent>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.TriggerEvent> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("TriggerEvent", com.finbourne.lusid.model.TriggerEvent.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "instrumentEventType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.VendorDependency.class, new TypeSelector<com.finbourne.lusid.model.VendorDependency>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.VendorDependency> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("VendorDependency", com.finbourne.lusid.model.VendorDependency.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "dependencyType"));
                    }
          })
                .registerTypeSelector(com.finbourne.lusid.model.YieldCurveData.class, new TypeSelector<com.finbourne.lusid.model.YieldCurveData>() {
                    @Override
                    public Class<? extends com.finbourne.lusid.model.YieldCurveData> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("YieldCurveData", com.finbourne.lusid.model.YieldCurveData.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "marketDataType"));
                    }
          })
        ;
        GsonBuilder builder = fireBuilder.createGsonBuilder();
        return builder;
    }

    private static String getDiscriminatorValue(JsonElement readElement, String discriminatorField) {
        JsonElement element = readElement.getAsJsonObject().get(discriminatorField);
        if (null == element) {
            throw new IllegalArgumentException("missing discriminator field: <" + discriminatorField + ">");
        }
        return element.getAsString();
    }

    /**
     * Returns the Java class that implements the OpenAPI schema for the specified discriminator value.
     *
     * @param classByDiscriminatorValue The map of discriminator values to Java classes.
     * @param discriminatorValue The value of the OpenAPI discriminator in the input data.
     * @return The Java class that implements the OpenAPI schema
     */
    private static Class getClassByDiscriminator(Map classByDiscriminatorValue, String discriminatorValue) {
        Class clazz = (Class) classByDiscriminatorValue.get(discriminatorValue);
        if (null == clazz) {
            throw new IllegalArgumentException("cannot determine model class of name: <" + discriminatorValue + ">");
        }
        return clazz;
    }

    {
        GsonBuilder gsonBuilder = createGson();
        gsonBuilder.registerTypeAdapter(Date.class, dateTypeAdapter);
        gsonBuilder.registerTypeAdapter(java.sql.Date.class, sqlDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(OffsetDateTime.class, offsetDateTimeTypeAdapter);
        gsonBuilder.registerTypeAdapter(LocalDate.class, localDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(byte[].class, byteArrayAdapter);
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.A2BBreakdown.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.A2BCategory.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.A2BDataRecord.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.A2BMovementRecord.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Abor.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AborConfiguration.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AborConfigurationProperties.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AborConfigurationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AborProperties.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AborRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AcceptEstimateValuationPointResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AccessControlledAction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AccessControlledResource.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AccessMetadataOperation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AccessMetadataValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Account.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AccountProperties.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AccountsUpsertResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AccumulationEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ActionId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AddBusinessDaysToDateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AddBusinessDaysToDateResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AdditionalPayment.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AddressDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AddressKeyComplianceParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AddressKeyDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AddressKeyFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AddressKeyList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AddressKeyListComplianceParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AddressKeyOptionDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AdjustHolding.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AdjustHoldingForDateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AdjustHoldingRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AggregateSpec.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AggregatedReturn.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AggregatedReturnsDispersionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AggregatedReturnsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AggregatedReturnsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AggregatedTransactionsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AggregationContext.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AggregationMeasureFailureDetail.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AggregationOptions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AggregationQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Allocation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AllocationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AllocationServiceRunResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AllocationSetRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AmortisationEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AmortisationRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AmortisationRuleSet.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Amount.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AnnulQuotesResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AnnulSingleStructuredDataResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AnnulStructuredDataResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ApplicableInstrumentEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.AssetLeg.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Barrier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Basket.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BasketIdentifier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BatchAdjustHoldingsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BatchUpdateUserReviewForComparisonResultRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BatchUpdateUserReviewForComparisonResultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BatchUpsertDatesForCalendarResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BatchUpsertInstrumentPropertiesResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BatchUpsertPortfolioAccessMetadataRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BatchUpsertPortfolioAccessMetadataResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BatchUpsertPortfolioAccessMetadataResponseItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BatchUpsertPortfolioTransactionsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BatchUpsertPropertyDefinitionPropertiesResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Block.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BlockAndOrderIdRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BlockAndOrders.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BlockAndOrdersCreateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BlockAndOrdersRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BlockRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BlockSetRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BlockedOrderRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Bond.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BondConversionEntry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BondConversionSchedule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BondCouponEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BondDefaultEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BondPrincipalEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BonusIssueEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BookTransactionsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BookTransactionsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BoolComplianceParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BoolListComplianceParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BranchStep.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BranchStepRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BreakCodeSource.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BucketedCashFlowRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BucketedCashFlowResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.BucketingSchedule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CalculationInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Calendar.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CalendarDate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CalendarDependency.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CallOnIntermediateSecuritiesEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CancelOrderAndMoveRemainingResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CancelOrdersAndMoveRemainingRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CancelOrdersAndMoveRemainingResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CancelOrdersResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CancelPlacementsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CancelledOrderResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CancelledPlacementResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CapFloor.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CapitalDistributionEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Cash.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CashAndSecurityOfferElection.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CashDependency.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CashDividendEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CashElection.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CashFlowEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CashFlowLineage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CashFlowValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CashFlowValueSet.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CashLadderRecord.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CashOfferElection.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CashPerpetual.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CdsCreditEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CdsFlowConventions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CdsIndex.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CdsProtectionDetailSpecification.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CdxCreditEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Change.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ChangeHistory.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ChangeInterval.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ChangeIntervalWithOrderManagementDetail.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ChangeItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ChartOfAccounts.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ChartOfAccountsProperties.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ChartOfAccountsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CheckStep.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CheckStepRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CleardownModuleDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CleardownModuleRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CleardownModuleResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CleardownModuleRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CleardownModuleRulesUpdatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Client.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CloseEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ClosePeriodDiaryEntryRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ComparisonAttributeValuePair.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CompletePortfolio.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CompleteRelation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CompleteRelationship.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ComplexBond.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ComplexMarketDataId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ComplianceBreachedOrderInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ComplianceRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ComplianceRuleBreakdown.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ComplianceRuleBreakdownRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ComplianceRuleResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ComplianceRuleResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ComplianceRuleResultDetail.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ComplianceRuleResultPortfolioDetail.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ComplianceRuleResultV2.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ComplianceRuleTemplate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ComplianceRuleUpsertRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ComplianceRuleUpsertResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ComplianceRunConfiguration.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ComplianceRunInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ComplianceRunInfoV2.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ComplianceSummaryRuleResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ComplianceSummaryRuleResultRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ComplianceTemplate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ComplianceTemplateParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ComplianceTemplateVariation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ComplianceTemplateVariationDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ComplianceTemplateVariationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ComponentFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ComponentTransaction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CompositeBreakdown.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CompositeBreakdownRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CompositeBreakdownResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CompositeDispersion.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CompositeDispersionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Compounding.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ConfigurationRecipe.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ConstantVolatilitySurface.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ConstituentsAdjustmentHeader.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ContractForDifference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CorporateAction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CorporateActionSource.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CorporateActionTransition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CorporateActionTransitionComponent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CorporateActionTransitionComponentRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CorporateActionTransitionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CounterpartyAgreement.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CounterpartyRiskInformation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CounterpartySignatory.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreateAddressKeyDefinitionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreateAmortisationRuleSetRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreateCalendarRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreateComplianceTemplateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreateCorporateActionSourceRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreateCustomEntityTypeRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreateCutLabelDefinitionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreateDataMapRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreateDataTypeRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreateDateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreateDerivedPropertyDefinitionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreateDerivedTransactionPortfolioRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreateGroupReconciliationComparisonRulesetRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreateGroupReconciliationDefinitionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreatePortfolioDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreatePortfolioGroupRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreatePropertyDefinitionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreateRecipeRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreateReconciliationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreateReferencePortfolioRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreateRelationDefinitionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreateRelationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreateRelationshipDefinitionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreateRelationshipRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreateSequenceRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreateStagingRuleSetRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreateTaxRuleSetRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreateTradeTicketsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreateTransactionPortfolioRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreateUnitDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreditDefaultSwap.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreditPremiumCashFlowEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreditRating.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreditSpreadCurveData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CreditSupportAnnex.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CurrencyAndAmount.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CurveOptions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CustodianAccount.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CustodianAccountProperties.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CustodianAccountRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CustodianAccountsUpsertResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CustomEntityDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CustomEntityDefinitionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CustomEntityEntity.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CustomEntityField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CustomEntityFieldDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CustomEntityId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CustomEntityRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CustomEntityResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CustomEntityType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CutLabelDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.CutLocalTime.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DataDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DataMapKey.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DataMapping.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DataScope.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DataType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DataTypeEntity.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DataTypeSummary.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DateAttributes.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DateOrDiaryEntry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DateRange.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DateTimeComplianceParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DateTimeListComplianceParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DayMonth.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DecimalComplianceParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DecimalList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DecimalListComplianceParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DecoratedComplianceRunSummary.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DeleteAccountsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DeleteCustodianAccountsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DeleteInstrumentPropertiesResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DeleteInstrumentResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DeleteInstrumentsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DeleteRelationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DeleteRelationshipRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DeletedEntityResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DependencySourceFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DescribedAddressKey.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Dialect.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DialectId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DialectSchema.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DiaryEntry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DiaryEntryRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DiscountFactorCurveData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DiscountingDependency.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DividendOptionEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.DividendReinvestmentEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.EconomicDependencyWithComplexMarketData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.EconomicDependencyWithQuote.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.EffectiveRange.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ElectionSpecification.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.EligibilityCalculation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.EmptyModelOptions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.EntityIdentifier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Equity.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.EquityAllOfIdentifiers.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.EquityCurveByPricesData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.EquityCurveDependency.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.EquityModelOptions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.EquityOption.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.EquitySwap.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.EquityVolDependency.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.EquityVolSurfaceData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ErrorDetail.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.EventDateRange.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ExDividendConfiguration.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ExchangeTradedOption.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ExchangeTradedOptionContractDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Execution.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ExecutionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ExecutionSetRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ExerciseEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ExoticInstrument.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ExpandedGroup.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ExpiryEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ExternalFeeComponentFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Fee.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FeeAccrual.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FeeProperties.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FeeRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FeeRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FeeRuleUpsertRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FeeRuleUpsertResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FeeTransactionTemplateSpecification.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FeeType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FeeTypeRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FieldDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FieldSchema.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FieldValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FileResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FilterPredicateComplianceParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FilterStep.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FilterStepRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FixedLeg.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FixedLegAllOfOverrides.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FixedSchedule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FlexibleLoan.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FloatSchedule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FloatingLeg.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FlowConventionName.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FlowConventions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ForwardRateAgreement.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FromRecipe.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Fund.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FundAmount.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FundConfiguration.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FundConfigurationProperties.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FundConfigurationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FundDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FundIdList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FundPnlBreakdown.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FundPreviousNAV.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FundProperties.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FundRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FundShareClass.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FundValuationPointData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FundingLeg.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FundingLegOptions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Future.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FutureExpiryEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FuturesContractDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FxConventions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FxDependency.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FxForward.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FxForwardCurveByQuoteReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FxForwardCurveData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FxForwardModelOptions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FxForwardPipsCurveData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FxForwardSettlementEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FxForwardTenorCurveData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FxForwardTenorPipsCurveData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FxForwardsDependency.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FxLinkedNotionalSchedule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FxOption.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FxRateSchedule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FxSwap.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FxTenorConvention.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FxVolDependency.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.FxVolSurfaceData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GeneralLedgerProfileMapping.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GeneralLedgerProfileRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GeneralLedgerProfileResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GeneratedEventDiagnostics.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GetCdsFlowConventionsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GetComplexMarketDataResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GetCounterpartyAgreementResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GetCreditSupportAnnexResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GetDataMapResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GetFlowConventionsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GetIndexConventionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GetInstrumentsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GetQuotesResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GetRecipeComposerResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GetRecipeResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GetReferencePortfolioConstituentsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GetStructuredResultDataResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GetVirtualDocumentResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupBySelectorComplianceParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupByStep.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupByStepRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupCalculationComplianceParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupFilterPredicateComplianceParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupFilterStep.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupFilterStepRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupOfMarketDataKeyRules.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationAggregateAttributeRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationAggregateAttributeValues.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationAggregateComparisonRuleOperand.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationComparisonResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationComparisonRuleStringValueMap.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationComparisonRuleTolerance.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationComparisonRuleset.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationCoreAttributeRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationCoreAttributeValues.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationCoreComparisonRuleOperand.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationDatePair.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationDates.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationDefinitionComparisonRulesetIds.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationDefinitionCurrencies.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationDefinitionPortfolioEntityIds.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationDefinitionRecipeIds.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationInstanceId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationResultStatuses.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationResultTypes.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationReviewStatuses.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationRunDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationRunRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationRunResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationSummary.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationUserReview.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationUserReviewAdd.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationUserReviewBreakCode.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationUserReviewComment.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationUserReviewMatchKey.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupReconciliationUserReviewRemove.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.GroupedResultOfAddressKey.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.HoldingAdjustment.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.HoldingAdjustmentWithDate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.HoldingContext.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.HoldingContributor.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.HoldingIdsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.HoldingPricingInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.HoldingsAdjustment.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.HoldingsAdjustmentHeader.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.IUnitDefinitionDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.IdSelectorDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.IdentifierPartSchema.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.IndexConvention.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.IndexModelOptions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.IndexProjectionDependency.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.IndustryClassifier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InflationFixingDependency.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InflationIndexConventions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InflationLeg.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InflationLinkedBond.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InflationSwap.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InformationalErrorEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InformationalEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InlineValuationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InlineValuationsReconciliationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InputTransition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Instrument.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InstrumentCapabilities.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InstrumentCashFlow.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InstrumentDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InstrumentDefinitionFormat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InstrumentEntity.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InstrumentEventConfiguration.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InstrumentEventHolder.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InstrumentEventInstruction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InstrumentEventInstructionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InstrumentEventInstructionsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InstrumentIdTypeDescriptor.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InstrumentIdValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InstrumentList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InstrumentListComplianceParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InstrumentMatch.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InstrumentModels.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InstrumentPaymentDiary.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InstrumentPaymentDiaryLeg.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InstrumentPaymentDiaryRow.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InstrumentProperties.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InstrumentResolutionDetail.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InstrumentSearchProperty.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InterestRateSwap.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.InterestRateSwaption.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.IntermediateComplianceStep.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.IntermediateComplianceStepRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.IntermediateSecuritiesDistributionEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.IrVolCubeData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.IrVolDependency.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.IsBusinessDayResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.JournalEntryLine.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.JournalEntryLinesQueryParameters.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.LabelValueSet.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.LapseElection.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.LegDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.LegalEntity.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.LevelStep.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.LifeCycleEventLineage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.LifeCycleEventValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.LineageMember.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Link.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ListAggregationReconciliation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ListAggregationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ListComplexMarketDataWithMetaDataResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.LoanFacility.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.LoanPeriod.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.LockPeriodDiaryEntryRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.LusidProblemDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.LusidTradeTicket.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.LusidUniqueId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.LusidValidationProblemDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.MappedString.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Mapping.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.MappingRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.MarketContext.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.MarketContextSuppliers.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.MarketDataKeyRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.MarketDataOverrides.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.MarketDataSpecificRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.MarketOptions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.MarketQuote.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.MasteredInstrument.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.MaturityEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.MbsCouponEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.MbsInterestDeferralEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.MbsInterestShortfallEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.MbsPrincipalEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.MbsPrincipalWriteOffEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.MergerEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.MetricValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ModelPackage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ModelSelection.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.MoveOrdersToDifferentBlocksRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.MovedOrderToDifferentBlockResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.MultiCurrencyAmounts.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.NewInstrument.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.NextValueInSequenceResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OpaqueDependency.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OpaqueMarketData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OpaqueModelOptions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OpenEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Operation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OptionEntry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OptionExerciseCashEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OptionExerciseElection.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OptionExercisePhysicalEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OptionalitySchedule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Order.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderBySpec.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderFlowConfiguration.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderGraphBlock.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderGraphBlockAllocationDetail.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderGraphBlockAllocationSynopsis.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderGraphBlockExecutionDetail.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderGraphBlockExecutionSynopsis.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderGraphBlockOrderDetail.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderGraphBlockOrderSynopsis.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderGraphBlockPlacementDetail.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderGraphBlockPlacementSynopsis.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderGraphBlockTransactionDetail.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderGraphBlockTransactionSynopsis.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderGraphPlacement.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderGraphPlacementAllocationDetail.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderGraphPlacementAllocationSynopsis.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderGraphPlacementChildPlacementDetail.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderGraphPlacementExecutionDetail.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderGraphPlacementExecutionSynopsis.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderGraphPlacementOrderDetail.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderGraphPlacementOrderSynopsis.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderGraphPlacementPlacementSynopsis.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderInstruction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderInstructionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderInstructionSetRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderSetRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OrderUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OtcConfirmation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OutputTransaction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.OutputTransition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PackageRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PackageSetRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfAbor.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfAborConfiguration.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfAccount.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfAddressKeyDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfAllocation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfAmortisationRuleSet.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfBlock.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfCalendar.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfChartOfAccounts.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfCleardownModuleResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfCleardownModuleRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfComplianceRuleResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfComplianceRunInfoV2.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfComplianceTemplate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfCorporateActionSource.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfCustodianAccount.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfCustomEntityDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfCustomEntityResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfCustomEntityType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfCutLabelDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfDataTypeSummary.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfDialectId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfDiaryEntry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfExecution.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfFee.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfFeeType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfFund.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfFundConfiguration.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfGeneralLedgerProfileResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfGroupReconciliationComparisonResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfGroupReconciliationComparisonRuleset.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfGroupReconciliationDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfInstrument.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfInstrumentEventHolder.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfInstrumentEventInstruction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfLegalEntity.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfOrder.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfOrderGraphBlock.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfOrderGraphPlacement.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfOrderInstruction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfPackage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfParticipation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfPerson.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfPlacement.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfPortfolioGroup.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfPortfolioGroupSearchResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfPortfolioSearchResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfPostingModuleResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfPostingModuleRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfPropertyDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfPropertyDefinitionSearchResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfReconciliation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfReferenceListResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfRelationshipDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfSequenceDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfStagedModification.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfStagedModificationsRequestedChangeInterval.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfStagingRuleSet.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfTransactionTemplate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfTransactionTemplateSpecification.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfTranslationScriptId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfValuationPointOverview.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfVirtualRow.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfWorkspace.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PagedResourceListOfWorkspaceItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Participation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ParticipationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ParticipationSetRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PercentCheckStep.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PercentCheckStepRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PerformanceReturn.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PerformanceReturnsMetric.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PeriodDiaryEntriesReopenedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PerpetualProperty.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Person.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PlaceBlocksRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Placement.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PlacementRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PlacementSetRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PlacementUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Portfolio.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PortfolioCashFlow.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PortfolioCashLadder.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PortfolioDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PortfolioEntity.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PortfolioEntityId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PortfolioGroup.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PortfolioGroupIdComplianceParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PortfolioGroupIdList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PortfolioGroupIdListComplianceParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PortfolioGroupProperties.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PortfolioGroupSearchResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PortfolioHolding.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PortfolioIdComplianceParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PortfolioIdList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PortfolioIdListComplianceParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PortfolioProperties.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PortfolioReconciliationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PortfolioResultDataKeyRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PortfolioReturnBreakdown.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PortfolioSearchResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PortfolioTradeTicket.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PortfolioWithoutHref.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PortfoliosReconciliationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PostingModuleDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PostingModuleRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PostingModuleResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PostingModuleRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PostingModuleRulesUpdatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PreTradeConfiguration.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Premium.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PreviousFundValuationPointData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PreviousNAV.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PreviousShareClassBreakdown.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PricingContext.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PricingOptions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ProcessedCommand.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Property.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PropertyDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PropertyDefinitionEntity.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PropertyDefinitionSearchResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PropertyFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PropertyInterval.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PropertyKeyComplianceParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PropertyKeyListComplianceParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PropertyList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PropertyListComplianceParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PropertySchema.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PropertyValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PropertyValueEquals.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.PropertyValueIn.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ProtectionPayoutCashFlowEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.QueryApplicableInstrumentEventsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.QueryBucketedCashFlowsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.QueryCashFlowsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.QueryInstrumentEventsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.QueryTradeTicketsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.QueryableKey.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Quote.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.QuoteAccessMetadataRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.QuoteAccessMetadataRuleId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.QuoteDependency.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.QuoteId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.QuoteSeriesId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.RawVendorEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ReOpenPeriodDiaryEntryRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.RealisedGainLoss.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.RecipeBlock.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.RecipeComposer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.RecipeValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.RecombineStep.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ReconcileDateTimeRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ReconcileNumericRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ReconcileStringRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ReconciledTransaction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Reconciliation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ReconciliationBreak.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ReconciliationConfiguration.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ReconciliationId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ReconciliationLeftRightAddressKeyPair.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ReconciliationLine.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ReconciliationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ReconciliationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ReconciliationSideConfiguration.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ReconciliationTransactions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ReferenceData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ReferenceInstrument.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ReferenceListRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ReferenceListResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ReferencePortfolioConstituent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ReferencePortfolioConstituentRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.RelatedEntity.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Relation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.RelationDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Relationship.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.RelationshipDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.RelativeDateOffset.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Repo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.RequestedChanges.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResetEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfAccessControlledResource.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfAccessMetadataValueOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfAddressKeyDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfAggregatedReturn.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfAggregationQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfAllocation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfApplicableInstrumentEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfBlock.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfBlockAndOrders.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfCalendarDate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfChange.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfChangeHistory.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfChangeInterval.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfChangeIntervalWithOrderManagementDetail.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfComplianceBreachedOrderInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfComplianceRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfComplianceRuleResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfComplianceRunInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfConstituentsAdjustmentHeader.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfCorporateAction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfDataType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfExecution.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfFeeRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfGetCdsFlowConventionsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfGetCounterpartyAgreementResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfGetCreditSupportAnnexResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfGetFlowConventionsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfGetIndexConventionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfGetRecipeComposerResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfGetRecipeResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfHoldingsAdjustmentHeader.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfIUnitDefinitionDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfInstrumentCashFlow.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfInstrumentEventHolder.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfInstrumentIdTypeDescriptor.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfLegalEntity.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfListComplexMarketDataWithMetaDataResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfMapping.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfMovedOrderToDifferentBlockResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfOrder.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfOrderInstruction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfOutputTransaction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfPackage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfParticipation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfPerformanceReturn.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfPerson.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfPlacement.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfPortfolio.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfPortfolioCashFlow.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfPortfolioCashLadder.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfPortfolioTradeTicket.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfProcessedCommand.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfProperty.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfPropertyDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfPropertyInterval.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfQueryableKey.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfQuote.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfQuoteAccessMetadataRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfReconciliationBreak.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfRelation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfRelationship.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfScopeDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfSideDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfString.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfTaxRuleSet.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfTransaction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfTransactionType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResourceListOfValueType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResponseMetaData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResultDataKeyRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResultDataSchema.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResultValue0D.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResultValueBool.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResultValueCurrency.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResultValueDateTimeOffset.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResultValueDecimal.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResultValueDictionary.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResultValueInt.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ResultValueString.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ReturnZeroPvOptions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ReverseStockSplitEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.RoundingConfiguration.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.RoundingConfigurationComponent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.RoundingConvention.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.RulesInterval.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Schema.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ScopeDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ScripDividendEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ScriptMapReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.SecurityElection.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.SecurityOfferElection.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.SequenceDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.SetAmortisationRulesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.SetLegalEntityIdentifiersRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.SetLegalEntityPropertiesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.SetPersonIdentifiersRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.SetPersonPropertiesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.SetShareClassInstrumentsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.SetTransactionConfigurationAlias.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.SetTransactionConfigurationSourceRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.SettlementCycle.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.SettlementSchedule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ShareClassAmount.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ShareClassBreakdown.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ShareClassData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ShareClassDealingBreakdown.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ShareClassDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ShareClassPnlBreakdown.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.SideConfigurationData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.SideConfigurationDataRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.SideDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.SideDefinitionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.SidesDefinitionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.SimpleCashFlowLoan.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.SimpleInstrument.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.SimpleRoundingConvention.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.SpecificHoldingPricingInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.SpinOffEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.StagedModification.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.StagedModificationDecision.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.StagedModificationDecisionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.StagedModificationEffectiveRange.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.StagedModificationStagingRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.StagedModificationsEntityHrefs.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.StagedModificationsInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.StagedModificationsRequestedChangeInterval.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.StagingRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.StagingRuleApprovalCriteria.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.StagingRuleMatchCriteria.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.StagingRuleSet.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.StepSchedule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.StockDividendEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.StockSplitEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Strategy.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Stream.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.StringComplianceParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.StringList.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.StringListComplianceParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.StructuredResultData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.StructuredResultDataId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.SubHoldingKeyValueEquals.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.SwapCashFlowEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.SwapPrincipalEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TargetTaxLot.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TargetTaxLotRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TaxRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TaxRuleSet.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TemplateField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TenderEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TermDeposit.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TermDepositInterestEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TermDepositPrincipalEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TotalReturnSwap.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Touch.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TradeTicket.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Transaction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionConfigurationData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionConfigurationDataRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionConfigurationMovementData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionConfigurationMovementDataRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionConfigurationTypeAlias.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionCurrencyAndAmount.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionDateWindows.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionDiagnostics.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionFieldMap.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionPrice.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionPriceAndType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionPropertyMap.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionPropertyMapping.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionPropertyMappingRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionQueryParameters.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionReconciliationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionReconciliationRequestV2.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionSetConfigurationData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionSetConfigurationDataRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionTemplate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionTemplateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionTemplateSpecification.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionTypeAlias.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionTypeCalculation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionTypeDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionTypeMovement.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionTypePropertyMapping.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionTypeRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransactionsReconciliationsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TransitionEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TranslateEntitiesInlinedRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TranslateEntitiesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TranslateEntitiesResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TranslateInstrumentDefinitionsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TranslateInstrumentDefinitionsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TranslateTradeTicketRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TranslateTradeTicketsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TranslationContext.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TranslationInput.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TranslationResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TranslationScript.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TranslationScriptId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TrialBalance.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TrialBalanceQueryParameters.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TriggerEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.TypedResourceId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UnitisationData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UnitsRatio.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpdateAmortisationRuleSetDetailsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpdateCalendarRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpdateComplianceTemplateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpdateCustomEntityDefinitionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpdateCustomEntityTypeRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpdateCutLabelDefinitionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpdateDataTypeRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpdateDerivedPropertyDefinitionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpdateFeeTypeRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpdateGroupReconciliationComparisonRulesetRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpdateGroupReconciliationDefinitionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpdateInstrumentIdentifierRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpdateOrdersResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpdatePlacementsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpdatePortfolioGroupRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpdatePortfolioRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpdatePropertyDefinitionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpdateReconciliationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpdateReferenceDataRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpdateRelationshipDefinitionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpdateStagingRuleSetRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpdateTaxRuleSetRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpdateUnitRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertCdsFlowConventionsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertComplexMarketDataRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertComplianceRuleRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertComplianceRunSummaryRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertComplianceRunSummaryResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertCorporateActionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertCorporateActionsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertCounterpartyAgreementRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertCreditSupportAnnexRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertCustomEntitiesResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertCustomEntityAccessMetadataRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertDialectRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertFlowConventionsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertIndexConventionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertInstrumentEventRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertInstrumentEventsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertInstrumentPropertiesResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertInstrumentPropertyRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertInstrumentsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertLegalEntitiesResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertLegalEntityAccessMetadataRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertLegalEntityRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertPersonAccessMetadataRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertPersonRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertPersonsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertPortfolioAccessMetadataRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertPortfolioGroupAccessMetadataRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertPortfolioTransactionsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertQuoteAccessMetadataRuleRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertQuoteRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertQuotesResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertRecipeComposerRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertRecipeRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertReferencePortfolioConstituentPropertiesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertReferencePortfolioConstituentPropertiesResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertReferencePortfolioConstituentsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertReferencePortfolioConstituentsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertResultValuesDataRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertReturnsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertSingleStructuredDataResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertStructuredDataResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertStructuredResultDataRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertTransactionPropertiesResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertTranslationScriptRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.UpsertValuationPointRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.User.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ValuationPointDataQueryParameters.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ValuationPointDataRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ValuationPointDataResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ValuationPointOverview.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ValuationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ValuationSchedule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.ValuationsReconciliationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.VendorDependency.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.VendorModelRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Version.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.VersionSummaryDto.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.VersionedResourceListOfA2BDataRecord.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.VersionedResourceListOfA2BMovementRecord.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.VersionedResourceListOfHoldingContributor.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.VersionedResourceListOfJournalEntryLine.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.VersionedResourceListOfOutputTransaction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.VersionedResourceListOfPortfolioHolding.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.VersionedResourceListOfTransaction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.VersionedResourceListOfTrialBalance.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.VersionedResourceListWithWarningsOfPortfolioHolding.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.VirtualDocument.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.VirtualDocumentRow.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.VirtualRow.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Warning.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.WeekendMask.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.WeightedInstrument.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.WeightedInstrumentInLineLookupIdentifiers.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.WeightedInstruments.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.Workspace.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.WorkspaceCreationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.WorkspaceItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.WorkspaceItemCreationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.WorkspaceItemUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.WorkspaceUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.finbourne.lusid.model.YieldCurveData.CustomTypeAdapterFactory());
        gson = gsonBuilder.create();
    }

    /**
     * Get Gson.
     *
     * @return Gson
     */
    public static Gson getGson() {
        return gson;
    }

    /**
     * Set Gson.
     *
     * @param gson Gson
     */
    public static void setGson(Gson gson) {
        JSON.gson = gson;
    }

    public static void setLenientOnJson(boolean lenientOnJson) {
        isLenientOnJson = lenientOnJson;
    }

    /**
     * Serialize the given Java object into JSON string.
     *
     * @param obj Object
     * @return String representation of the JSON
     */
    public static String serialize(Object obj) {
        return gson.toJson(obj);
    }

    /**
     * Deserialize the given JSON string to Java object.
     *
     * @param <T>        Type
     * @param body       The JSON string
     * @param returnType The type to deserialize into
     * @return The deserialized Java object
     */
    @SuppressWarnings("unchecked")
    public static <T> T deserialize(String body, Type returnType) {
        try {
            if (isLenientOnJson) {
                JsonReader jsonReader = new JsonReader(new StringReader(body));
                // see https://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/stream/JsonReader.html#setLenient(boolean)
                jsonReader.setLenient(true);
                return gson.fromJson(jsonReader, returnType);
            } else {
                return gson.fromJson(body, returnType);
            }
        } catch (JsonParseException e) {
            // Fallback processing when failed to parse JSON form response body:
            // return the response body string directly for the String return type;
            if (returnType.equals(String.class)) {
                return (T) body;
            } else {
                throw (e);
            }
        }
    }

    /**
     * Gson TypeAdapter for Byte Array type
     */
    public static class ByteArrayAdapter extends TypeAdapter<byte[]> {

        @Override
        public void write(JsonWriter out, byte[] value) throws IOException {
            if (value == null) {
                out.nullValue();
            } else {
                out.value(ByteString.of(value).base64());
            }
        }

        @Override
        public byte[] read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String bytesAsBase64 = in.nextString();
                    ByteString byteString = ByteString.decodeBase64(bytesAsBase64);
                    return byteString.toByteArray();
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 OffsetDateTime type
     */
    public static class OffsetDateTimeTypeAdapter extends TypeAdapter<OffsetDateTime> {

        private DateTimeFormatter formatter;

        public OffsetDateTimeTypeAdapter() {
            this(DateTimeFormatter.ISO_OFFSET_DATE_TIME);
        }

        public OffsetDateTimeTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, OffsetDateTime date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public OffsetDateTime read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    if (date.endsWith("+0000")) {
                        date = date.substring(0, date.length()-5) + "Z";
                    }
                    return OffsetDateTime.parse(date, formatter);
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 LocalDate type
     */
    public static class LocalDateTypeAdapter extends TypeAdapter<LocalDate> {

        private DateTimeFormatter formatter;

        public LocalDateTypeAdapter() {
            this(DateTimeFormatter.ISO_LOCAL_DATE);
        }

        public LocalDateTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, LocalDate date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public LocalDate read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    return LocalDate.parse(date, formatter);
            }
        }
    }

    public static void setOffsetDateTimeFormat(DateTimeFormatter dateFormat) {
        offsetDateTimeTypeAdapter.setFormat(dateFormat);
    }

    public static void setLocalDateFormat(DateTimeFormatter dateFormat) {
        localDateTypeAdapter.setFormat(dateFormat);
    }

    /**
     * Gson TypeAdapter for java.sql.Date type
     * If the dateFormat is null, a simple "yyyy-MM-dd" format will be used
     * (more efficient than SimpleDateFormat).
     */
    public static class SqlDateTypeAdapter extends TypeAdapter<java.sql.Date> {

        private DateFormat dateFormat;

        public SqlDateTypeAdapter() {}

        public SqlDateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, java.sql.Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = date.toString();
                }
                out.value(value);
            }
        }

        @Override
        public java.sql.Date read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    try {
                        if (dateFormat != null) {
                            return new java.sql.Date(dateFormat.parse(date).getTime());
                        }
                        return new java.sql.Date(ISO8601Utils.parse(date, new ParsePosition(0)).getTime());
                    } catch (ParseException e) {
                        throw new JsonParseException(e);
                    }
            }
        }
    }

    /**
     * Gson TypeAdapter for java.util.Date type
     * If the dateFormat is null, ISO8601Utils will be used.
     */
    public static class DateTypeAdapter extends TypeAdapter<Date> {

        private DateFormat dateFormat;

        public DateTypeAdapter() {}

        public DateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = ISO8601Utils.format(date, true);
                }
                out.value(value);
            }
        }

        @Override
        public Date read(JsonReader in) throws IOException {
            try {
                switch (in.peek()) {
                    case NULL:
                        in.nextNull();
                        return null;
                    default:
                        String date = in.nextString();
                        try {
                            if (dateFormat != null) {
                                return dateFormat.parse(date);
                            }
                            return ISO8601Utils.parse(date, new ParsePosition(0));
                        } catch (ParseException e) {
                            throw new JsonParseException(e);
                        }
                }
            } catch (IllegalArgumentException e) {
                throw new JsonParseException(e);
            }
        }
    }

    public static void setDateFormat(DateFormat dateFormat) {
        dateTypeAdapter.setFormat(dateFormat);
    }

    public static void setSqlDateFormat(DateFormat dateFormat) {
        sqlDateTypeAdapter.setFormat(dateFormat);
    }
}
